// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module on_structure_corner (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x,
        y,
        scenario_nr_struct,
        scenario_structure_c_address0,
        scenario_structure_c_ce0,
        scenario_structure_c_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 10'b1;
parameter    ap_ST_fsm_state2 = 10'b10;
parameter    ap_ST_fsm_state3 = 10'b100;
parameter    ap_ST_fsm_state4 = 10'b1000;
parameter    ap_ST_fsm_state5 = 10'b10000;
parameter    ap_ST_fsm_state6 = 10'b100000;
parameter    ap_ST_fsm_state7 = 10'b1000000;
parameter    ap_ST_fsm_state8 = 10'b10000000;
parameter    ap_ST_fsm_state9 = 10'b100000000;
parameter    ap_ST_fsm_state10 = 10'b1000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_5 = 4'b101;
parameter    ap_const_lv4_6 = 4'b110;
parameter    ap_const_lv4_7 = 4'b111;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv31_1 = 31'b1;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv34_1 = 34'b1;
parameter    ap_const_lv30_0 = 30'b000000000000000000000000000000;
parameter    ap_const_lv34_2 = 34'b10;
parameter    ap_const_lv34_3 = 34'b11;
parameter    ap_const_lv34_4 = 34'b100;
parameter    ap_const_lv34_5 = 34'b101;
parameter    ap_const_lv34_6 = 34'b110;
parameter    ap_const_lv34_7 = 34'b111;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] x;
input  [31:0] y;
input  [31:0] scenario_nr_struct;
output  [6:0] scenario_structure_c_address0;
output   scenario_structure_c_ce0;
input  [31:0] scenario_structure_c_q0;
output  [3:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[6:0] scenario_structure_c_address0;
reg scenario_structure_c_ce0;
reg[3:0] ap_return;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
wire   [0:0] tmp_fu_175_p2;
reg   [0:0] tmp_reg_312;
wire   [0:0] ap_CS_fsm_state2;
wire   [30:0] i_7_fu_180_p2;
reg   [30:0] i_7_reg_316;
wire   [33:0] tmp_s_fu_186_p3;
reg   [33:0] tmp_s_reg_321;
wire   [0:0] ap_CS_fsm_state3;
reg   [6:0] scenario_structure_c_20_reg_342;
reg   [6:0] scenario_structure_c_21_reg_347;
reg   [6:0] scenario_structure_c_22_reg_352;
reg   [6:0] scenario_structure_c_23_reg_357;
reg   [6:0] scenario_structure_c_24_reg_362;
reg   [6:0] scenario_structure_c_25_reg_367;
wire   [0:0] grp_fu_157_p2;
reg   [0:0] tmp_144_reg_372;
wire   [0:0] grp_fu_162_p2;
reg   [0:0] tmp_145_reg_376;
wire   [0:0] ap_CS_fsm_state4;
reg   [0:0] tmp_146_reg_380;
wire   [0:0] ap_CS_fsm_state5;
reg   [0:0] tmp_147_reg_384;
wire   [0:0] ap_CS_fsm_state6;
reg   [0:0] tmp_148_reg_388;
wire   [0:0] ap_CS_fsm_state7;
reg   [0:0] tmp_149_reg_392;
wire   [0:0] ap_CS_fsm_state8;
reg   [0:0] tmp_150_reg_396;
wire   [0:0] ap_CS_fsm_state9;
reg   [30:0] i_reg_122;
wire   [0:0] ap_CS_fsm_state10;
reg   [3:0] p_0_phi_fu_140_p10;
reg   [3:0] p_0_reg_133;
wire   [63:0] tmp_268_fu_194_p1;
wire   [63:0] tmp_270_fu_204_p3;
wire   [63:0] tmp_272_fu_218_p3;
wire   [63:0] tmp_274_fu_232_p3;
wire   [63:0] tmp_276_fu_246_p3;
wire   [63:0] tmp_278_fu_260_p3;
wire   [63:0] tmp_280_fu_274_p3;
wire   [63:0] tmp_282_fu_288_p3;
wire   [31:0] i_cast_fu_171_p1;
wire   [33:0] tmp_269_fu_199_p2;
wire   [33:0] tmp_271_fu_213_p2;
wire   [33:0] tmp_273_fu_227_p2;
wire   [33:0] tmp_275_fu_241_p2;
wire   [33:0] tmp_277_fu_255_p2;
wire   [33:0] tmp_279_fu_269_p2;
wire   [33:0] tmp_281_fu_283_p2;
reg   [3:0] ap_return_preg;
reg   [9:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'b1;
#0 ap_return_preg = 4'b0000;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= ap_const_lv4_0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state10) & ((tmp_reg_312 == 1'b0) | (~(1'b0 == tmp_144_reg_372) & ~(1'b0 == tmp_145_reg_376)) | (~(1'b0 == tmp_146_reg_380) & ~(1'b0 == tmp_147_reg_384)) | (~(1'b0 == tmp_148_reg_388) & ~(1'b0 == tmp_149_reg_392)) | (~(1'b0 == grp_fu_162_p2) & ~(1'b0 == tmp_150_reg_396))))) begin
            ap_return_preg <= p_0_phi_fu_140_p10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (((1'b0 == tmp_144_reg_372) & (1'b0 == tmp_146_reg_380) & (1'b0 == tmp_148_reg_388) & ~(tmp_reg_312 == 1'b0) & (1'b0 == tmp_150_reg_396)) | ((1'b0 == tmp_144_reg_372) & (1'b0 == tmp_146_reg_380) & (1'b0 == tmp_148_reg_388) & ~(tmp_reg_312 == 1'b0) & (1'b0 == grp_fu_162_p2)) | ((1'b0 == tmp_144_reg_372) & (1'b0 == tmp_146_reg_380) & ~(tmp_reg_312 == 1'b0) & (1'b0 == tmp_150_reg_396) & (1'b0 == tmp_149_reg_392)) | ((1'b0 == tmp_144_reg_372) & (1'b0 == tmp_148_reg_388) & ~(tmp_reg_312 == 1'b0) & (1'b0 == tmp_150_reg_396) & (1'b0 == tmp_147_reg_384)) | ((1'b0 == tmp_146_reg_380) & (1'b0 == tmp_148_reg_388) & ~(tmp_reg_312 == 1'b0) & (1'b0 == tmp_150_reg_396) & (1'b0 == tmp_145_reg_376)) | ((1'b0 == tmp_144_reg_372) & (1'b0 == tmp_146_reg_380) & ~(tmp_reg_312 == 1'b0) & (1'b0 == grp_fu_162_p2) & (1'b0 == tmp_149_reg_392)) | ((1'b0 == tmp_144_reg_372) & (1'b0 == tmp_148_reg_388) & ~(tmp_reg_312 == 1'b0) & (1'b0 == grp_fu_162_p2) & (1'b0 == tmp_147_reg_384)) | ((1'b0 == tmp_144_reg_372) & ~(tmp_reg_312 == 1'b0) & (1'b0 == tmp_150_reg_396) & (1'b0 == tmp_149_reg_392) & (1'b0 == tmp_147_reg_384)) | ((1'b0 == tmp_146_reg_380) & (1'b0 == tmp_148_reg_388) & ~(tmp_reg_312 == 1'b0) & (1'b0 == grp_fu_162_p2) & (1'b0 == tmp_145_reg_376)) | ((1'b0 == tmp_146_reg_380) & ~(tmp_reg_312 == 1'b0) & (1'b0 == tmp_150_reg_396) & (1'b0 == tmp_149_reg_392) & (1'b0 == tmp_145_reg_376)) | ((1'b0 == tmp_148_reg_388) & ~(tmp_reg_312 == 1'b0) & (1'b0 == tmp_150_reg_396) & (1'b0 == tmp_147_reg_384) & (1'b0 == tmp_145_reg_376)) | ((1'b0 == tmp_144_reg_372) & ~(tmp_reg_312 == 1'b0) & (1'b0 == grp_fu_162_p2) & (1'b0 == tmp_149_reg_392) & (1'b0 == tmp_147_reg_384)) | ((1'b0 == tmp_146_reg_380) & ~(tmp_reg_312 == 1'b0) & (1'b0 == grp_fu_162_p2) & (1'b0 == tmp_149_reg_392) & (1'b0 == tmp_145_reg_376)) | ((1'b0 == tmp_148_reg_388) & ~(tmp_reg_312 == 1'b0) & (1'b0 == grp_fu_162_p2) & (1'b0 == tmp_147_reg_384) & (1'b0 == tmp_145_reg_376)) | (~(tmp_reg_312 == 1'b0) & (1'b0 == tmp_150_reg_396) & (1'b0 == tmp_149_reg_392) & (1'b0 == tmp_147_reg_384) & (1'b0 == tmp_145_reg_376)) | (~(tmp_reg_312 == 1'b0) & (1'b0 == grp_fu_162_p2) & (1'b0 == tmp_149_reg_392) & (1'b0 == tmp_147_reg_384) & (1'b0 == tmp_145_reg_376))))) begin
        i_reg_122 <= i_7_reg_316;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_122 <= ap_const_lv31_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (((1'b0 == tmp_144_reg_372) & (1'b0 == tmp_146_reg_380) & (1'b0 == tmp_148_reg_388) & ~(tmp_reg_312 == 1'b0) & ~(1'b0 == grp_fu_162_p2) & ~(1'b0 == tmp_150_reg_396)) | ((1'b0 == tmp_144_reg_372) & (1'b0 == tmp_146_reg_380) & ~(tmp_reg_312 == 1'b0) & (1'b0 == tmp_149_reg_392) & ~(1'b0 == grp_fu_162_p2) & ~(1'b0 == tmp_150_reg_396)) | ((1'b0 == tmp_144_reg_372) & (1'b0 == tmp_148_reg_388) & ~(tmp_reg_312 == 1'b0) & (1'b0 == tmp_147_reg_384) & ~(1'b0 == grp_fu_162_p2) & ~(1'b0 == tmp_150_reg_396)) | ((1'b0 == tmp_146_reg_380) & (1'b0 == tmp_148_reg_388) & ~(tmp_reg_312 == 1'b0) & (1'b0 == tmp_145_reg_376) & ~(1'b0 == grp_fu_162_p2) & ~(1'b0 == tmp_150_reg_396)) | ((1'b0 == tmp_144_reg_372) & ~(tmp_reg_312 == 1'b0) & (1'b0 == tmp_149_reg_392) & (1'b0 == tmp_147_reg_384) & ~(1'b0 == grp_fu_162_p2) & ~(1'b0 == tmp_150_reg_396)) | ((1'b0 == tmp_146_reg_380) & ~(tmp_reg_312 == 1'b0) & (1'b0 == tmp_149_reg_392) & (1'b0 == tmp_145_reg_376) & ~(1'b0 == grp_fu_162_p2) & ~(1'b0 == tmp_150_reg_396)) | ((1'b0 == tmp_148_reg_388) & ~(tmp_reg_312 == 1'b0) & (1'b0 == tmp_147_reg_384) & (1'b0 == tmp_145_reg_376) & ~(1'b0 == grp_fu_162_p2) & ~(1'b0 == tmp_150_reg_396)) | (~(tmp_reg_312 == 1'b0) & (1'b0 == tmp_149_reg_392) & (1'b0 == tmp_147_reg_384) & (1'b0 == tmp_145_reg_376) & ~(1'b0 == grp_fu_162_p2) & ~(1'b0 == tmp_150_reg_396))))) begin
        p_0_reg_133 <= ap_const_lv4_8;
    end else if (((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == tmp_148_reg_388) & ~(1'b0 == grp_fu_162_p2))) begin
        p_0_reg_133 <= ap_const_lv4_7;
    end else if (((1'b1 == ap_CS_fsm_state6) & ~(1'b0 == tmp_146_reg_380) & ~(1'b0 == grp_fu_162_p2))) begin
        p_0_reg_133 <= ap_const_lv4_6;
    end else if (((1'b1 == ap_CS_fsm_state4) & ~(1'b0 == tmp_144_reg_372) & ~(1'b0 == grp_fu_162_p2))) begin
        p_0_reg_133 <= ap_const_lv4_5;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_175_p2 == 1'b0))) begin
        p_0_reg_133 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_7_reg_316 <= i_7_fu_180_p2;
        tmp_reg_312 <= tmp_fu_175_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        scenario_structure_c_20_reg_342[6 : 3] <= tmp_272_fu_218_p3[6 : 3];
        scenario_structure_c_21_reg_347[6 : 3] <= tmp_274_fu_232_p3[6 : 3];
        scenario_structure_c_22_reg_352[6 : 3] <= tmp_276_fu_246_p3[6 : 3];
        scenario_structure_c_23_reg_357[6 : 3] <= tmp_278_fu_260_p3[6 : 3];
        scenario_structure_c_24_reg_362[6 : 3] <= tmp_280_fu_274_p3[6 : 3];
        scenario_structure_c_25_reg_367[6 : 3] <= tmp_282_fu_288_p3[6 : 3];
        tmp_144_reg_372 <= grp_fu_157_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & ~(1'b0 == tmp_144_reg_372))) begin
        tmp_145_reg_376 <= grp_fu_162_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_146_reg_380 <= grp_fu_157_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & ~(1'b0 == tmp_146_reg_380))) begin
        tmp_147_reg_384 <= grp_fu_162_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_148_reg_388 <= grp_fu_157_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == tmp_148_reg_388))) begin
        tmp_149_reg_392 <= grp_fu_162_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_150_reg_396 <= grp_fu_157_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & ~(tmp_fu_175_p2 == 1'b0))) begin
        tmp_s_reg_321[33 : 3] <= tmp_s_fu_186_p3[33 : 3];
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1)) | ((1'b1 == ap_CS_fsm_state10) & ((tmp_reg_312 == 1'b0) | (~(1'b0 == tmp_144_reg_372) & ~(1'b0 == tmp_145_reg_376)) | (~(1'b0 == tmp_146_reg_380) & ~(1'b0 == tmp_147_reg_384)) | (~(1'b0 == tmp_148_reg_388) & ~(1'b0 == tmp_149_reg_392)) | (~(1'b0 == grp_fu_162_p2) & ~(1'b0 == tmp_150_reg_396)))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & ((tmp_reg_312 == 1'b0) | (~(1'b0 == tmp_144_reg_372) & ~(1'b0 == tmp_145_reg_376)) | (~(1'b0 == tmp_146_reg_380) & ~(1'b0 == tmp_147_reg_384)) | (~(1'b0 == tmp_148_reg_388) & ~(1'b0 == tmp_149_reg_392)) | (~(1'b0 == grp_fu_162_p2) & ~(1'b0 == tmp_150_reg_396))))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & ((tmp_reg_312 == 1'b0) | (~(1'b0 == tmp_144_reg_372) & ~(1'b0 == tmp_145_reg_376)) | (~(1'b0 == tmp_146_reg_380) & ~(1'b0 == tmp_147_reg_384)) | (~(1'b0 == tmp_148_reg_388) & ~(1'b0 == tmp_149_reg_392)) | (~(1'b0 == grp_fu_162_p2) & ~(1'b0 == tmp_150_reg_396))))) begin
        ap_return = p_0_phi_fu_140_p10;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (((1'b0 == tmp_144_reg_372) & (1'b0 == tmp_146_reg_380) & (1'b0 == tmp_148_reg_388) & ~(tmp_reg_312 == 1'b0) & ~(1'b0 == grp_fu_162_p2) & ~(1'b0 == tmp_150_reg_396)) | ((1'b0 == tmp_144_reg_372) & (1'b0 == tmp_146_reg_380) & ~(tmp_reg_312 == 1'b0) & (1'b0 == tmp_149_reg_392) & ~(1'b0 == grp_fu_162_p2) & ~(1'b0 == tmp_150_reg_396)) | ((1'b0 == tmp_144_reg_372) & (1'b0 == tmp_148_reg_388) & ~(tmp_reg_312 == 1'b0) & (1'b0 == tmp_147_reg_384) & ~(1'b0 == grp_fu_162_p2) & ~(1'b0 == tmp_150_reg_396)) | ((1'b0 == tmp_146_reg_380) & (1'b0 == tmp_148_reg_388) & ~(tmp_reg_312 == 1'b0) & (1'b0 == tmp_145_reg_376) & ~(1'b0 == grp_fu_162_p2) & ~(1'b0 == tmp_150_reg_396)) | ((1'b0 == tmp_144_reg_372) & ~(tmp_reg_312 == 1'b0) & (1'b0 == tmp_149_reg_392) & (1'b0 == tmp_147_reg_384) & ~(1'b0 == grp_fu_162_p2) & ~(1'b0 == tmp_150_reg_396)) | ((1'b0 == tmp_146_reg_380) & ~(tmp_reg_312 == 1'b0) & (1'b0 == tmp_149_reg_392) & (1'b0 == tmp_145_reg_376) & ~(1'b0 == grp_fu_162_p2) & ~(1'b0 == tmp_150_reg_396)) | ((1'b0 == tmp_148_reg_388) & ~(tmp_reg_312 == 1'b0) & (1'b0 == tmp_147_reg_384) & (1'b0 == tmp_145_reg_376) & ~(1'b0 == grp_fu_162_p2) & ~(1'b0 == tmp_150_reg_396)) | (~(tmp_reg_312 == 1'b0) & (1'b0 == tmp_149_reg_392) & (1'b0 == tmp_147_reg_384) & (1'b0 == tmp_145_reg_376) & ~(1'b0 == grp_fu_162_p2) & ~(1'b0 == tmp_150_reg_396))))) begin
        p_0_phi_fu_140_p10 = ap_const_lv4_8;
    end else begin
        p_0_phi_fu_140_p10 = p_0_reg_133;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        scenario_structure_c_address0 = scenario_structure_c_25_reg_367;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        scenario_structure_c_address0 = scenario_structure_c_24_reg_362;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        scenario_structure_c_address0 = scenario_structure_c_23_reg_357;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        scenario_structure_c_address0 = scenario_structure_c_22_reg_352;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        scenario_structure_c_address0 = scenario_structure_c_21_reg_347;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        scenario_structure_c_address0 = scenario_structure_c_20_reg_342;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        scenario_structure_c_address0 = tmp_270_fu_204_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        scenario_structure_c_address0 = tmp_268_fu_194_p1;
    end else begin
        scenario_structure_c_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        scenario_structure_c_ce0 = 1'b1;
    end else begin
        scenario_structure_c_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((tmp_fu_175_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if ((~(1'b0 == tmp_144_reg_372) & ~(1'b0 == grp_fu_162_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if ((~(1'b0 == tmp_146_reg_380) & ~(1'b0 == grp_fu_162_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if ((~(1'b0 == tmp_148_reg_388) & ~(1'b0 == grp_fu_162_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((tmp_reg_312 == 1'b0) | (~(1'b0 == tmp_144_reg_372) & ~(1'b0 == tmp_145_reg_376)) | (~(1'b0 == tmp_146_reg_380) & ~(1'b0 == tmp_147_reg_384)) | (~(1'b0 == tmp_148_reg_388) & ~(1'b0 == tmp_149_reg_392)) | (~(1'b0 == grp_fu_162_p2) & ~(1'b0 == tmp_150_reg_396)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state10 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_state5 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state6 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state7 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state8 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state9 = ap_CS_fsm[ap_const_lv32_8];

assign grp_fu_157_p2 = ((scenario_structure_c_q0 == x) ? 1'b1 : 1'b0);

assign grp_fu_162_p2 = ((scenario_structure_c_q0 == y) ? 1'b1 : 1'b0);

assign i_7_fu_180_p2 = (i_reg_122 + ap_const_lv31_1);

assign i_cast_fu_171_p1 = i_reg_122;

assign tmp_268_fu_194_p1 = tmp_s_fu_186_p3;

assign tmp_269_fu_199_p2 = (tmp_s_reg_321 | ap_const_lv34_1);

assign tmp_270_fu_204_p3 = {{ap_const_lv30_0}, {tmp_269_fu_199_p2}};

assign tmp_271_fu_213_p2 = (tmp_s_reg_321 | ap_const_lv34_2);

assign tmp_272_fu_218_p3 = {{ap_const_lv30_0}, {tmp_271_fu_213_p2}};

assign tmp_273_fu_227_p2 = (tmp_s_reg_321 | ap_const_lv34_3);

assign tmp_274_fu_232_p3 = {{ap_const_lv30_0}, {tmp_273_fu_227_p2}};

assign tmp_275_fu_241_p2 = (tmp_s_reg_321 | ap_const_lv34_4);

assign tmp_276_fu_246_p3 = {{ap_const_lv30_0}, {tmp_275_fu_241_p2}};

assign tmp_277_fu_255_p2 = (tmp_s_reg_321 | ap_const_lv34_5);

assign tmp_278_fu_260_p3 = {{ap_const_lv30_0}, {tmp_277_fu_255_p2}};

assign tmp_279_fu_269_p2 = (tmp_s_reg_321 | ap_const_lv34_6);

assign tmp_280_fu_274_p3 = {{ap_const_lv30_0}, {tmp_279_fu_269_p2}};

assign tmp_281_fu_283_p2 = (tmp_s_reg_321 | ap_const_lv34_7);

assign tmp_282_fu_288_p3 = {{ap_const_lv30_0}, {tmp_281_fu_283_p2}};

assign tmp_fu_175_p2 = (($signed(i_cast_fu_171_p1) < $signed(scenario_nr_struct)) ? 1'b1 : 1'b0);

assign tmp_s_fu_186_p3 = {{i_reg_122}, {ap_const_lv3_0}};

always @ (posedge ap_clk) begin
    tmp_s_reg_321[2:0] <= 3'b000;
    scenario_structure_c_20_reg_342[2:0] <= 3'b010;
    scenario_structure_c_21_reg_347[2:0] <= 3'b011;
    scenario_structure_c_22_reg_352[2:0] <= 3'b100;
    scenario_structure_c_23_reg_357[2:0] <= 3'b101;
    scenario_structure_c_24_reg_362[2:0] <= 3'b110;
    scenario_structure_c_25_reg_367[2:0] <= 3'b111;
end

endmodule //on_structure_corner
