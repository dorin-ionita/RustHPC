-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sin_cos_range_redux_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    t_in : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of sin_cos_range_redux_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv79_0 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv79_9B74EDA8435E5A67F5F : STD_LOGIC_VECTOR (78 downto 0) := "0001001101101110100111011011010100001000011010111100101101001100111111101011111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv12_C01 : STD_LOGIC_VECTOR (11 downto 0) := "110000000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_C4D : STD_LOGIC_VECTOR (11 downto 0) := "110001001101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv12_3FE : STD_LOGIC_VECTOR (11 downto 0) := "001111111110";
    constant ap_const_lv32_83 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000011";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_79 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111001";
    constant ap_const_lv32_7A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111010";
    constant ap_const_lv32_7C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111100";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_9B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011011";
    constant ap_const_lv79_6487ED5110B4611A6263 : STD_LOGIC_VECTOR (78 downto 0) := "1100100100001111110110101010001000100001011010001100001000110100110001001100011";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv7_4E : STD_LOGIC_VECTOR (6 downto 0) := "1001110";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv76_0 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv78_0 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv78_20000000000000000000 : STD_LOGIC_VECTOR (77 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv11_3E7 : STD_LOGIC_VECTOR (10 downto 0) := "01111100111";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_7D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111101";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv77_0 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv11_10 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv64_8000000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv64_7FFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "0111111111111111111111111111111111111111111111111111111111111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal hls_ref_4oPi_table_s_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal hls_ref_4oPi_table_s_ce0 : STD_LOGIC;
    signal hls_ref_4oPi_table_s_q0 : STD_LOGIC_VECTOR (255 downto 0);
    signal hls_cordic_ctab_tab_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal hls_cordic_ctab_tab_ce0 : STD_LOGIC;
    signal hls_cordic_ctab_tab_q0 : STD_LOGIC_VECTOR (125 downto 0);
    signal p_Result_s_reg_1482 : STD_LOGIC_VECTOR (0 downto 0);
    signal loc_V_fu_319_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal loc_V_reg_1487 : STD_LOGIC_VECTOR (10 downto 0);
    signal loc_V_1_fu_329_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal loc_V_1_reg_1493 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_3_fu_343_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1498 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_372_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_4_reg_1507 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_223_i_i_fu_400_p2 : STD_LOGIC_VECTOR (77 downto 0);
    signal r_V_5_fu_406_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal r_V_5_reg_1517 : STD_LOGIC_VECTOR (52 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ret_V_5_reg_1522 : STD_LOGIC_VECTOR (124 downto 0);
    signal h_fract_V_reg_1527 : STD_LOGIC_VECTOR (77 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_big_mult_v3small_fu_301_ap_done : STD_LOGIC;
    signal p_Val2_9_reg_1532 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_reg_1537 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_7_fu_507_p4 : STD_LOGIC_VECTOR (75 downto 0);
    signal r_V_7_reg_1542 : STD_LOGIC_VECTOR (75 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_big_mult_v3_94_17_s_fu_296_ap_done : STD_LOGIC;
    signal loc_V_2_fu_517_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal k_fu_527_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_reg_1555 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal y_s_V_fu_537_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal y_s_V_reg_1560 : STD_LOGIC_VECTOR (78 downto 0);
    signal exitcond_i_fu_521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_s_V_fu_543_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal x_s_V_reg_1566 : STD_LOGIC_VECTOR (78 downto 0);
    signal p_Val2_13_fu_583_p3 : STD_LOGIC_VECTOR (77 downto 0);
    signal p_Val2_13_reg_1577 : STD_LOGIC_VECTOR (77 downto 0);
    signal p_Val2_16_fu_591_p3 : STD_LOGIC_VECTOR (77 downto 0);
    signal p_Val2_16_reg_1583 : STD_LOGIC_VECTOR (77 downto 0);
    signal p_Result_i1_reg_1589 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_8_i_reg_1594 : STD_LOGIC_VECTOR (15 downto 0);
    signal c2_fu_655_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal c2_reg_1599 : STD_LOGIC_VECTOR (31 downto 0);
    signal c3_fu_663_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal c3_reg_1606 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_671_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_9_reg_1613 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Result_i2_reg_1618 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_8_i1_reg_1623 : STD_LOGIC_VECTOR (15 downto 0);
    signal c2_1_fu_731_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal c2_1_reg_1628 : STD_LOGIC_VECTOR (31 downto 0);
    signal c3_1_fu_739_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal c3_1_reg_1635 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_747_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_33_reg_1642 : STD_LOGIC_VECTOR (10 downto 0);
    signal sel_fu_757_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal sel_reg_1647 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_26_fu_764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_1657 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_reg_1662 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_V_fu_774_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_V_reg_1667 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tx_V_fu_794_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tx_V_reg_1672 : STD_LOGIC_VECTOR (78 downto 0);
    signal ty_V_fu_812_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal ty_V_reg_1677 : STD_LOGIC_VECTOR (78 downto 0);
    signal p_Val2_27_fu_840_p2 : STD_LOGIC_VECTOR (75 downto 0);
    signal p_Val2_27_reg_1682 : STD_LOGIC_VECTOR (75 downto 0);
    signal tz_V_fu_866_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal c4_fu_894_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal c4_reg_1692 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_i1_35_fu_906_p2 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_i1_35_reg_1697 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_197_i_fu_911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_197_i_reg_1703 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_200_i_fu_922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_200_i_reg_1709 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_i_fu_949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_i_reg_1714 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_975_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_19_reg_1719 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_206_i_fu_983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_206_i_reg_1724 : STD_LOGIC_VECTOR (0 downto 0);
    signal c4_1_fu_1010_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal c4_1_reg_1729 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i2_fu_1022_p2 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_i2_reg_1734 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_197_i1_fu_1027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_197_i1_reg_1740 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_200_i1_fu_1038_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_200_i1_reg_1746 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_i1_fu_1065_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_i1_reg_1751 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_1091_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_38_reg_1756 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_206_i1_fu_1099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_206_i1_reg_1761 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_199_i_fu_1107_p2 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_199_i_reg_1766 : STD_LOGIC_VECTOR (77 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal sel_tmp6_i_fu_1117_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_i_reg_1772 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_exp_V_fu_1140_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal out_exp_V_reg_1777 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_199_i1_fu_1150_p2 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_199_i1_reg_1782 : STD_LOGIC_VECTOR (77 downto 0);
    signal sel_tmp6_i1_fu_1160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_i1_reg_1788 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_exp_V_1_fu_1183_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal out_exp_V_1_reg_1793 : STD_LOGIC_VECTOR (10 downto 0);
    signal loc_V_3_fu_1259_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal loc_V_3_reg_1798 : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal loc_V_4_fu_1335_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal loc_V_4_reg_1803 : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_big_mult_v3_94_17_s_fu_296_ap_start : STD_LOGIC;
    signal grp_big_mult_v3_94_17_s_fu_296_ap_idle : STD_LOGIC;
    signal grp_big_mult_v3_94_17_s_fu_296_ap_ready : STD_LOGIC;
    signal grp_big_mult_v3_94_17_s_fu_296_ap_return : STD_LOGIC_VECTOR (187 downto 0);
    signal grp_big_mult_v3small_fu_301_ap_start : STD_LOGIC;
    signal grp_big_mult_v3small_fu_301_ap_idle : STD_LOGIC;
    signal grp_big_mult_v3small_fu_301_ap_ready : STD_LOGIC;
    signal grp_big_mult_v3small_fu_301_ap_return : STD_LOGIC_VECTOR (177 downto 0);
    signal k_V_reg_230 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_135_i_fu_499_p3 : STD_LOGIC_VECTOR (77 downto 0);
    signal dout_V_phi_fu_245_p4 : STD_LOGIC_VECTOR (77 downto 0);
    signal dout_V_reg_242 : STD_LOGIC_VECTOR (77 downto 0);
    signal p_Val2_7_reg_251 : STD_LOGIC_VECTOR (78 downto 0);
    signal p_Val2_6_reg_261 : STD_LOGIC_VECTOR (78 downto 0);
    signal p_Val2_5_reg_273 : STD_LOGIC_VECTOR (78 downto 0);
    signal sh_assign_reg_285 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_grp_big_mult_v3_94_17_s_fu_296_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_big_mult_v3small_fu_301_ap_start : STD_LOGIC := '0';
    signal tmp_i_i_fu_367_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_549_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_3_fu_307_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_cast_fu_333_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_fu_337_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal addr_V_fu_351_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_i_i_fu_357_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal op2_assign_fu_386_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal op2_assign_i_cast_fu_392_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_fu_376_p4 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_222_i_i_fu_396_p1 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_199_i_i_fu_414_p1 : STD_LOGIC_VECTOR (255 downto 0);
    signal r_V_6_fu_417_p2 : STD_LOGIC_VECTOR (255 downto 0);
    signal prod_adj_V_fu_463_p4 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_185_i_fu_473_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_134_i_fu_489_p4 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_133_i_fu_479_p4 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_s_fu_533_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_7_fu_559_p1 : STD_LOGIC_VECTOR (76 downto 0);
    signal tmp_8_fu_571_p1 : STD_LOGIC_VECTOR (76 downto 0);
    signal tmp_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_8_fu_563_p3 : STD_LOGIC_VECTOR (77 downto 0);
    signal r_V_9_fu_575_p3 : STD_LOGIC_VECTOR (77 downto 0);
    signal p_Result_4_i_fu_609_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_6_i_fu_627_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_3_fu_619_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_4_fu_637_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_4_i1_fu_685_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_6_i1_fu_703_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_8_fu_695_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_9_fu_713_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_751_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Val2_i_fu_782_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal p_Val2_23_fu_787_p3 : STD_LOGIC_VECTOR (78 downto 0);
    signal p_Val2_i3_fu_800_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal p_Val2_24_fu_805_p3 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_43_fu_828_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_188_cast_fu_836_p1 : STD_LOGIC_VECTOR (75 downto 0);
    signal p_Val2_17_cast_fu_818_p4 : STD_LOGIC_VECTOR (75 downto 0);
    signal p_Val2_18_cast_fu_846_p1 : STD_LOGIC_VECTOR (76 downto 0);
    signal p_Val2_i9_fu_849_p2 : STD_LOGIC_VECTOR (76 downto 0);
    signal p_Val2_s_fu_855_p3 : STD_LOGIC_VECTOR (76 downto 0);
    signal p_Val2_cast_fu_862_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal p_Result_2_fu_872_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_5_fu_879_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal c1_fu_886_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i1_fu_902_p1 : STD_LOGIC_VECTOR (77 downto 0);
    signal shift_fu_917_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_1_fu_927_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_203_i_fu_932_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_fu_943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shift_2_fu_937_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_955_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_15_fu_959_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_17_fu_963_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_18_fu_971_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Result_7_fu_988_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_10_fu_995_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal c1_1_fu_1002_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_fu_1018_p1 : STD_LOGIC_VECTOR (77 downto 0);
    signal shift_5_fu_1033_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_6_fu_1043_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_203_i1_fu_1048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp15_fu_1059_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shift_7_fu_1053_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_1071_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_35_fu_1075_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_36_fu_1079_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_37_fu_1087_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_198_i_fu_1104_p1 : STD_LOGIC_VECTOR (77 downto 0);
    signal sel_tmp5_i_fu_1112_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_1122_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1_fu_1127_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal phitmp_i_fu_1134_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_198_i1_fu_1147_p1 : STD_LOGIC_VECTOR (77 downto 0);
    signal sel_tmp5_i1_fu_1155_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_1165_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_14_fu_1170_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal phitmp_i1_fu_1177_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_201_i_fu_1190_p1 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_202_i_fu_1193_p2 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_204_i_fu_1198_p1 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_205_i_fu_1201_p2 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_22_fu_1216_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_31_fu_1226_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_32_fu_1236_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_10_fu_1243_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_2_fu_1207_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_11_fu_1252_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_201_i1_fu_1266_p1 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_202_i1_fu_1269_p2 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_204_i1_fu_1274_p1 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_205_i1_fu_1277_p2 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_39_fu_1292_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_40_fu_1302_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_41_fu_1312_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_20_fu_1319_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_16_fu_1283_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_21_fu_1328_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal p_Result_6_fu_1342_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_11_fu_1354_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_246_neg_fu_1366_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_245_neg_fu_1376_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sel_tmp_fu_1386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_1372_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_out_fu_1350_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sel_tmp2_fu_1399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_1382_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sel_tmp1_fu_1391_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sel_tmp4_fu_1412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_1404_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sel_tmp6_fu_1425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_1417_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sel_tmp8_fu_1438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_c_out_fu_1362_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sel_tmp7_fu_1430_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sel_tmp10_fu_1451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_1443_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_out_fu_1456_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal t_in_s_out_fu_1464_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);

    component big_mult_v3_94_17_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_V : IN STD_LOGIC_VECTOR (77 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (187 downto 0) );
    end component;


    component big_mult_v3small IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_V : IN STD_LOGIC_VECTOR (124 downto 0);
        b_V : IN STD_LOGIC_VECTOR (52 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (177 downto 0) );
    end component;


    component sin_cos_range_redhbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (255 downto 0) );
    end component;


    component sin_cos_range_redibs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (125 downto 0) );
    end component;



begin
    hls_ref_4oPi_table_s_U : component sin_cos_range_redhbi
    generic map (
        DataWidth => 256,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hls_ref_4oPi_table_s_address0,
        ce0 => hls_ref_4oPi_table_s_ce0,
        q0 => hls_ref_4oPi_table_s_q0);

    hls_cordic_ctab_tab_U : component sin_cos_range_redibs
    generic map (
        DataWidth => 126,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hls_cordic_ctab_tab_address0,
        ce0 => hls_cordic_ctab_tab_ce0,
        q0 => hls_cordic_ctab_tab_q0);

    grp_big_mult_v3_94_17_s_fu_296 : component big_mult_v3_94_17_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_big_mult_v3_94_17_s_fu_296_ap_start,
        ap_done => grp_big_mult_v3_94_17_s_fu_296_ap_done,
        ap_idle => grp_big_mult_v3_94_17_s_fu_296_ap_idle,
        ap_ready => grp_big_mult_v3_94_17_s_fu_296_ap_ready,
        a_V => h_fract_V_reg_1527,
        ap_return => grp_big_mult_v3_94_17_s_fu_296_ap_return);

    grp_big_mult_v3small_fu_301 : component big_mult_v3small
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_big_mult_v3small_fu_301_ap_start,
        ap_done => grp_big_mult_v3small_fu_301_ap_done,
        ap_idle => grp_big_mult_v3small_fu_301_ap_idle,
        ap_ready => grp_big_mult_v3small_fu_301_ap_ready,
        a_V => ret_V_5_reg_1522,
        b_V => r_V_5_reg_1517,
        ap_return => grp_big_mult_v3small_fu_301_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_big_mult_v3_94_17_s_fu_296_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_big_mult_v3_94_17_s_fu_296_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_state3) and not((ap_const_logic_0 = grp_big_mult_v3small_fu_301_ap_done)))) then 
                    ap_reg_grp_big_mult_v3_94_17_s_fu_296_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_big_mult_v3_94_17_s_fu_296_ap_ready)) then 
                    ap_reg_grp_big_mult_v3_94_17_s_fu_296_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_big_mult_v3small_fu_301_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_big_mult_v3small_fu_301_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
                    ap_reg_grp_big_mult_v3small_fu_301_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_big_mult_v3small_fu_301_ap_ready)) then 
                    ap_reg_grp_big_mult_v3small_fu_301_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    dout_V_reg_242_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and not((tmp_3_fu_343_p3 = ap_const_lv1_0)))) then 
                dout_V_reg_242 <= tmp_223_i_i_fu_400_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state4) and (tmp_3_reg_1498 = ap_const_lv1_0) and not(((tmp_3_reg_1498 = ap_const_lv1_0) and (ap_const_logic_0 = grp_big_mult_v3_94_17_s_fu_296_ap_done))))) then 
                dout_V_reg_242 <= tmp_135_i_fu_499_p3;
            end if; 
        end if;
    end process;

    k_V_reg_230_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and not((tmp_3_fu_343_p3 = ap_const_lv1_0)))) then 
                k_V_reg_230 <= ap_const_lv3_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state4) and (tmp_3_reg_1498 = ap_const_lv1_0) and not(((tmp_3_reg_1498 = ap_const_lv1_0) and (ap_const_logic_0 = grp_big_mult_v3_94_17_s_fu_296_ap_done))))) then 
                k_V_reg_230 <= p_Val2_9_reg_1532;
            end if; 
        end if;
    end process;

    p_Val2_5_reg_273_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                p_Val2_5_reg_273 <= tx_V_reg_1672;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state4) and not(((tmp_3_reg_1498 = ap_const_lv1_0) and (ap_const_logic_0 = grp_big_mult_v3_94_17_s_fu_296_ap_done))))) then 
                p_Val2_5_reg_273 <= ap_const_lv79_9B74EDA8435E5A67F5F;
            end if; 
        end if;
    end process;

    p_Val2_6_reg_261_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                p_Val2_6_reg_261 <= ty_V_reg_1677;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state4) and not(((tmp_3_reg_1498 = ap_const_lv1_0) and (ap_const_logic_0 = grp_big_mult_v3_94_17_s_fu_296_ap_done))))) then 
                p_Val2_6_reg_261 <= ap_const_lv79_0;
            end if; 
        end if;
    end process;

    p_Val2_7_reg_251_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                p_Val2_7_reg_251 <= tz_V_fu_866_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state4) and not(((tmp_3_reg_1498 = ap_const_lv1_0) and (ap_const_logic_0 = grp_big_mult_v3_94_17_s_fu_296_ap_done))))) then 
                p_Val2_7_reg_251 <= loc_V_2_fu_517_p1;
            end if; 
        end if;
    end process;

    sh_assign_reg_285_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                sh_assign_reg_285 <= k_reg_1555;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state4) and not(((tmp_3_reg_1498 = ap_const_lv1_0) and (ap_const_logic_0 = grp_big_mult_v3_94_17_s_fu_296_ap_done))))) then 
                sh_assign_reg_285 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state5) and not((ap_const_lv1_0 = exitcond_i_fu_521_p2)))) then
                c2_1_reg_1628 <= c2_1_fu_731_p3;
                c2_reg_1599 <= c2_fu_655_p3;
                c3_1_reg_1635 <= c3_1_fu_739_p3;
                c3_reg_1606 <= c3_fu_663_p3;
                p_Result_8_i1_reg_1623 <= p_Val2_16_fu_591_p3(29 downto 14);
                p_Result_8_i_reg_1594 <= p_Val2_13_fu_583_p3(29 downto 14);
                p_Result_i1_reg_1589 <= p_Val2_13_fu_583_p3(77 downto 62);
                p_Result_i2_reg_1618 <= p_Val2_16_fu_591_p3(77 downto 62);
                    p_Val2_13_reg_1577(77 downto 1) <= p_Val2_13_fu_583_p3(77 downto 1);
                    p_Val2_16_reg_1583(77 downto 1) <= p_Val2_16_fu_591_p3(77 downto 1);
                sel_reg_1647 <= sel_fu_757_p3;
                tmp_26_reg_1657 <= tmp_26_fu_764_p2;
                tmp_27_reg_1662 <= tmp_27_fu_769_p2;
                tmp_33_reg_1642 <= tmp_33_fu_747_p1;
                tmp_9_reg_1613 <= tmp_9_fu_671_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = tmp_27_reg_1662) and (ap_const_lv1_0 = tmp_26_reg_1657))) then
                c4_1_reg_1729 <= c4_1_fu_1010_p3;
                c4_reg_1692 <= c4_fu_894_p3;
                sel_tmp1_i1_reg_1751 <= sel_tmp1_i1_fu_1065_p2;
                sel_tmp1_i_reg_1714 <= sel_tmp1_i_fu_949_p2;
                tmp_197_i1_reg_1740 <= tmp_197_i1_fu_1027_p2;
                tmp_197_i_reg_1703 <= tmp_197_i_fu_911_p2;
                tmp_19_reg_1719 <= tmp_19_fu_975_p3;
                tmp_200_i1_reg_1746 <= tmp_200_i1_fu_1038_p2;
                tmp_200_i_reg_1709 <= tmp_200_i_fu_922_p2;
                tmp_206_i1_reg_1761 <= tmp_206_i1_fu_1099_p2;
                tmp_206_i_reg_1724 <= tmp_206_i_fu_983_p2;
                tmp_38_reg_1756 <= tmp_38_fu_1091_p3;
                tmp_i1_35_reg_1697 <= tmp_i1_35_fu_906_p2;
                tmp_i2_reg_1734 <= tmp_i2_fu_1022_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state6))) then
                d_V_reg_1667 <= p_Val2_7_reg_251(77 downto 77);
                p_Val2_27_reg_1682 <= p_Val2_27_fu_840_p2;
                tx_V_reg_1672 <= tx_V_fu_794_p2;
                ty_V_reg_1677 <= ty_V_fu_812_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3) and not((ap_const_logic_0 = grp_big_mult_v3small_fu_301_ap_done)))) then
                h_fract_V_reg_1527 <= grp_big_mult_v3small_fu_301_ap_return(121 downto 44);
                p_Val2_9_reg_1532 <= grp_big_mult_v3small_fu_301_ap_return(124 downto 122);
                tmp_5_reg_1537 <= grp_big_mult_v3small_fu_301_ap_return(122 downto 122);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state5))) then
                k_reg_1555 <= k_fu_527_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then
                loc_V_1_reg_1493 <= loc_V_1_fu_329_p1;
                loc_V_reg_1487 <= p_Val2_3_fu_307_p1(62 downto 52);
                p_Result_s_reg_1482 <= p_Val2_3_fu_307_p1(63 downto 63);
                tmp_3_reg_1498 <= exp_fu_337_p2(11 downto 11);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_27_reg_1662) and (ap_const_lv1_0 = tmp_26_reg_1657) and (ap_const_lv1_1 = ap_CS_fsm_state10))) then
                loc_V_3_reg_1798 <= loc_V_3_fu_1259_p3;
                loc_V_4_reg_1803 <= loc_V_4_fu_1335_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_27_reg_1662) and (ap_const_lv1_0 = tmp_26_reg_1657) and (ap_const_lv1_1 = ap_CS_fsm_state9))) then
                out_exp_V_1_reg_1793 <= out_exp_V_1_fu_1183_p3;
                out_exp_V_reg_1777 <= out_exp_V_fu_1140_p3;
                sel_tmp6_i1_reg_1788 <= sel_tmp6_i1_fu_1160_p2;
                sel_tmp6_i_reg_1772 <= sel_tmp6_i_fu_1117_p2;
                tmp_199_i1_reg_1782 <= tmp_199_i1_fu_1150_p2;
                tmp_199_i_reg_1766 <= tmp_199_i_fu_1107_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2))) then
                    r_V_5_reg_1517(51 downto 0) <= r_V_5_fu_406_p3(51 downto 0);
                ret_V_5_reg_1522 <= r_V_6_fu_417_p2(255 downto 131);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and not(((tmp_3_reg_1498 = ap_const_lv1_0) and (ap_const_logic_0 = grp_big_mult_v3_94_17_s_fu_296_ap_done))))) then
                r_V_7_reg_1542 <= dout_V_phi_fu_245_p4(77 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and (tmp_3_fu_343_p3 = ap_const_lv1_0))) then
                tmp_4_reg_1507 <= tmp_4_fu_372_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state5) and (ap_const_lv1_0 = exitcond_i_fu_521_p2))) then
                x_s_V_reg_1566 <= x_s_V_fu_543_p2;
                y_s_V_reg_1560 <= y_s_V_fu_537_p2;
            end if;
        end if;
    end process;
    r_V_5_reg_1517(52) <= '1';
    p_Val2_13_reg_1577(0) <= '0';
    p_Val2_16_reg_1583(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, tmp_3_fu_343_p3, tmp_3_reg_1498, grp_big_mult_v3small_fu_301_ap_done, grp_big_mult_v3_94_17_s_fu_296_ap_done, exitcond_i_fu_521_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not((ap_start = ap_const_logic_0)) and not((tmp_3_fu_343_p3 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif ((not((ap_start = ap_const_logic_0)) and (tmp_3_fu_343_p3 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (not((ap_const_logic_0 = grp_big_mult_v3small_fu_301_ap_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (not(((tmp_3_reg_1498 = ap_const_lv1_0) and (ap_const_logic_0 = grp_big_mult_v3_94_17_s_fu_296_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (not((ap_const_lv1_0 = exitcond_i_fu_521_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    addr_V_fu_351_p2 <= std_logic_vector(signed(ap_const_lv12_C4D) + signed(tmp_i_cast_fu_333_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8 downto 8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state11)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1)) or ((ap_const_lv1_1 = ap_CS_fsm_state11)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state11)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        ap_const_lv64_7FFFFFFFFFFFFFFF when (tmp_26_reg_1657(0) = '1') else 
        t_in_s_out_fu_1464_p3;
    
    c1_1_fu_1002_p3_proc : process(p_Result_7_fu_988_p3)
    begin
        c1_1_fu_1002_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 32 - 1 downto 0 loop
            if p_Result_7_fu_988_p3(i) = '1' then
                c1_1_fu_1002_p3 <= std_logic_vector(to_unsigned(32-1-i,32));
                exit;
            end if;
        end loop;
    end process;

    
    c1_fu_886_p3_proc : process(p_Result_2_fu_872_p3)
    begin
        c1_fu_886_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 32 - 1 downto 0 loop
            if p_Result_2_fu_872_p3(i) = '1' then
                c1_fu_886_p3 <= std_logic_vector(to_unsigned(32-1-i,32));
                exit;
            end if;
        end loop;
    end process;

    
    c2_1_fu_731_p3_proc : process(p_Result_8_fu_695_p3)
    begin
        c2_1_fu_731_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 32 - 1 downto 0 loop
            if p_Result_8_fu_695_p3(i) = '1' then
                c2_1_fu_731_p3 <= std_logic_vector(to_unsigned(32-1-i,32));
                exit;
            end if;
        end loop;
    end process;

    
    c2_fu_655_p3_proc : process(p_Result_3_fu_619_p3)
    begin
        c2_fu_655_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 32 - 1 downto 0 loop
            if p_Result_3_fu_619_p3(i) = '1' then
                c2_fu_655_p3 <= std_logic_vector(to_unsigned(32-1-i,32));
                exit;
            end if;
        end loop;
    end process;

    
    c3_1_fu_739_p3_proc : process(p_Result_9_fu_713_p3)
    begin
        c3_1_fu_739_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 32 - 1 downto 0 loop
            if p_Result_9_fu_713_p3(i) = '1' then
                c3_1_fu_739_p3 <= std_logic_vector(to_unsigned(32-1-i,32));
                exit;
            end if;
        end loop;
    end process;

    
    c3_fu_663_p3_proc : process(p_Result_4_fu_637_p3)
    begin
        c3_fu_663_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 32 - 1 downto 0 loop
            if p_Result_4_fu_637_p3(i) = '1' then
                c3_fu_663_p3 <= std_logic_vector(to_unsigned(32-1-i,32));
                exit;
            end if;
        end loop;
    end process;

    
    c4_1_fu_1010_p3_proc : process(p_Result_10_fu_995_p3)
    begin
        c4_1_fu_1010_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 32 - 1 downto 0 loop
            if p_Result_10_fu_995_p3(i) = '1' then
                c4_1_fu_1010_p3 <= std_logic_vector(to_unsigned(32-1-i,32));
                exit;
            end if;
        end loop;
    end process;

    
    c4_fu_894_p3_proc : process(p_Result_5_fu_879_p3)
    begin
        c4_fu_894_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 32 - 1 downto 0 loop
            if p_Result_5_fu_879_p3(i) = '1' then
                c4_fu_894_p3 <= std_logic_vector(to_unsigned(32-1-i,32));
                exit;
            end if;
        end loop;
    end process;

    d_V_fu_774_p3 <= p_Val2_7_reg_251(77 downto 77);

    dout_V_phi_fu_245_p4_assign_proc : process(tmp_3_reg_1498, ap_CS_fsm_state4, tmp_135_i_fu_499_p3, dout_V_reg_242)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (tmp_3_reg_1498 = ap_const_lv1_0))) then 
            dout_V_phi_fu_245_p4 <= tmp_135_i_fu_499_p3;
        else 
            dout_V_phi_fu_245_p4 <= dout_V_reg_242;
        end if; 
    end process;

    exitcond_i_fu_521_p2 <= "1" when (sh_assign_reg_285 = ap_const_lv7_4E) else "0";
    exp_fu_337_p2 <= std_logic_vector(signed(ap_const_lv12_C01) + signed(tmp_i_cast_fu_333_p1));
    grp_big_mult_v3_94_17_s_fu_296_ap_start <= ap_reg_grp_big_mult_v3_94_17_s_fu_296_ap_start;
    grp_big_mult_v3small_fu_301_ap_start <= ap_reg_grp_big_mult_v3small_fu_301_ap_start;
    hls_cordic_ctab_tab_address0 <= tmp_28_fu_549_p1(7 - 1 downto 0);

    hls_cordic_ctab_tab_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state5))) then 
            hls_cordic_ctab_tab_ce0 <= ap_const_logic_1;
        else 
            hls_cordic_ctab_tab_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    hls_ref_4oPi_table_s_address0 <= tmp_i_i_fu_367_p1(4 - 1 downto 0);

    hls_ref_4oPi_table_s_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
            hls_ref_4oPi_table_s_ce0 <= ap_const_logic_1;
        else 
            hls_ref_4oPi_table_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    k_fu_527_p2 <= std_logic_vector(unsigned(sh_assign_reg_285) + unsigned(ap_const_lv7_1));
    loc_V_1_fu_329_p1 <= p_Val2_3_fu_307_p1(52 - 1 downto 0);
    loc_V_2_fu_517_p1 <= std_logic_vector(resize(unsigned(r_V_7_fu_507_p4),79));
    loc_V_3_fu_1259_p3 <= 
        tmp_2_fu_1207_p4 when (sel_tmp6_i_reg_1772(0) = '1') else 
        tmp_11_fu_1252_p3;
    loc_V_4_fu_1335_p3 <= 
        tmp_16_fu_1283_p4 when (sel_tmp6_i1_reg_1788(0) = '1') else 
        tmp_21_fu_1328_p3;
    loc_V_fu_319_p4 <= p_Val2_3_fu_307_p1(62 downto 52);
    op2_assign_fu_386_p2 <= std_logic_vector(unsigned(ap_const_lv12_3FE) - unsigned(tmp_i_cast_fu_333_p1));
        op2_assign_i_cast_fu_392_p1 <= std_logic_vector(resize(signed(op2_assign_fu_386_p2),32));

    out_exp_V_1_fu_1183_p3 <= 
        ap_const_lv11_0 when (tmp_206_i1_reg_1761(0) = '1') else 
        phitmp_i1_fu_1177_p2;
    out_exp_V_fu_1140_p3 <= 
        ap_const_lv11_0 when (tmp_206_i_reg_1724(0) = '1') else 
        phitmp_i_fu_1134_p2;
    p_Result_10_fu_995_p3 <= (p_Result_8_i1_reg_1623 & ap_const_lv16_8000);
    p_Result_11_fu_1354_p4 <= ((ap_const_lv1_0 & out_exp_V_1_reg_1793) & loc_V_4_reg_1803);
    p_Result_2_fu_872_p3 <= (p_Result_i1_reg_1589 & ap_const_lv16_8000);
    p_Result_3_fu_619_p3 <= (p_Result_4_i_fu_609_p4 & ap_const_lv16_8000);
    p_Result_4_fu_637_p3 <= (p_Result_6_i_fu_627_p4 & ap_const_lv16_8000);
    p_Result_4_i1_fu_685_p4 <= p_Val2_16_fu_591_p3(61 downto 46);
    p_Result_4_i_fu_609_p4 <= p_Val2_13_fu_583_p3(61 downto 46);
    p_Result_5_fu_879_p3 <= (p_Result_8_i_reg_1594 & ap_const_lv16_8000);
    p_Result_6_fu_1342_p4 <= ((ap_const_lv1_0 & out_exp_V_reg_1777) & loc_V_3_reg_1798);
    p_Result_6_i1_fu_703_p4 <= p_Val2_16_fu_591_p3(45 downto 30);
    p_Result_6_i_fu_627_p4 <= p_Val2_13_fu_583_p3(45 downto 30);
    p_Result_7_fu_988_p3 <= (p_Result_i2_reg_1618 & ap_const_lv16_8000);
    p_Result_8_fu_695_p3 <= (p_Result_4_i1_fu_685_p4 & ap_const_lv16_8000);
    p_Result_9_fu_713_p3 <= (p_Result_6_i1_fu_703_p4 & ap_const_lv16_8000);
    p_Result_i_i_fu_357_p4 <= addr_V_fu_351_p2(10 downto 7);
    p_Val2_13_fu_583_p3 <= 
        ap_const_lv78_0 when (tmp_fu_554_p2(0) = '1') else 
        r_V_8_fu_563_p3;
    p_Val2_16_fu_591_p3 <= 
        ap_const_lv78_20000000000000000000 when (tmp_fu_554_p2(0) = '1') else 
        r_V_9_fu_575_p3;
    p_Val2_17_cast_fu_818_p4 <= hls_cordic_ctab_tab_q0(125 downto 50);
    p_Val2_18_cast_fu_846_p1 <= std_logic_vector(resize(unsigned(p_Val2_27_reg_1682),77));
    p_Val2_23_fu_787_p3 <= 
        y_s_V_reg_1560 when (d_V_fu_774_p3(0) = '1') else 
        p_Val2_i_fu_782_p2;
    p_Val2_24_fu_805_p3 <= 
        p_Val2_i3_fu_800_p2 when (d_V_fu_774_p3(0) = '1') else 
        x_s_V_reg_1566;
    p_Val2_27_fu_840_p2 <= std_logic_vector(unsigned(tmp_188_cast_fu_836_p1) + unsigned(p_Val2_17_cast_fu_818_p4));
    p_Val2_3_fu_307_p1 <= t_in;
        p_Val2_cast_fu_862_p1 <= std_logic_vector(resize(signed(p_Val2_s_fu_855_p3),79));

    p_Val2_i3_fu_800_p2 <= std_logic_vector(unsigned(ap_const_lv79_0) - unsigned(x_s_V_reg_1566));
    p_Val2_i9_fu_849_p2 <= std_logic_vector(unsigned(ap_const_lv77_0) - unsigned(p_Val2_18_cast_fu_846_p1));
    p_Val2_i_fu_782_p2 <= std_logic_vector(unsigned(ap_const_lv79_0) - unsigned(y_s_V_reg_1560));
    p_Val2_s_fu_855_p3 <= 
        p_Val2_18_cast_fu_846_p1 when (d_V_reg_1667(0) = '1') else 
        p_Val2_i9_fu_849_p2;
    phitmp_i1_fu_1177_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(tmp_14_fu_1170_p3));
    phitmp_i_fu_1134_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(tmp_1_fu_1127_p3));
    prod_adj_V_fu_463_p4 <= grp_big_mult_v3_94_17_s_fu_296_ap_return(155 downto 77);
    r_V_5_fu_406_p3 <= (ap_const_lv1_1 & loc_V_1_reg_1493);
    r_V_6_fu_417_p2 <= std_logic_vector(shift_left(unsigned(hls_ref_4oPi_table_s_q0),to_integer(unsigned('0' & tmp_199_i_i_fu_414_p1(31-1 downto 0)))));
    r_V_7_fu_507_p4 <= dout_V_phi_fu_245_p4(77 downto 2);
    r_V_8_fu_563_p3 <= (tmp_7_fu_559_p1 & ap_const_lv1_0);
    r_V_9_fu_575_p3 <= (tmp_8_fu_571_p1 & ap_const_lv1_0);
    r_V_fu_376_p4 <= ((ap_const_lv1_1 & loc_V_1_fu_329_p1) & ap_const_lv25_0);
    s_out_fu_1456_p3 <= 
        tmp_c_out_fu_1362_p1 when (sel_tmp10_fu_1451_p2(0) = '1') else 
        sel_tmp9_fu_1443_p3;
    sel_fu_757_p3 <= 
        tmp_23_fu_751_p2 when (p_Result_s_reg_1482(0) = '1') else 
        k_V_reg_230;
    sel_tmp10_fu_1451_p2 <= "1" when (sel_reg_1647 = ap_const_lv3_1) else "0";
    sel_tmp1_fu_1391_p3 <= 
        tmp_24_fu_1372_p1 when (sel_tmp_fu_1386_p2(0) = '1') else 
        tmp_s_out_fu_1350_p1;
    sel_tmp1_i1_fu_1065_p2 <= (tmp15_fu_1059_p2 and tmp_197_i1_fu_1027_p2);
    sel_tmp1_i_fu_949_p2 <= (tmp5_fu_943_p2 and tmp_197_i_fu_911_p2);
    sel_tmp2_fu_1399_p2 <= "1" when (sel_reg_1647 = ap_const_lv3_6) else "0";
    sel_tmp3_fu_1404_p3 <= 
        tmp_25_fu_1382_p1 when (sel_tmp2_fu_1399_p2(0) = '1') else 
        sel_tmp1_fu_1391_p3;
    sel_tmp4_fu_1412_p2 <= "1" when (sel_reg_1647 = ap_const_lv3_5) else "0";
    sel_tmp5_fu_1417_p3 <= 
        tmp_25_fu_1382_p1 when (sel_tmp4_fu_1412_p2(0) = '1') else 
        sel_tmp3_fu_1404_p3;
    sel_tmp5_i1_fu_1155_p2 <= (tmp_200_i1_reg_1746 xor ap_const_lv1_1);
    sel_tmp5_i_fu_1112_p2 <= (tmp_200_i_reg_1709 xor ap_const_lv1_1);
    sel_tmp6_fu_1425_p2 <= "1" when (sel_reg_1647 = ap_const_lv3_4) else "0";
    sel_tmp6_i1_fu_1160_p2 <= (tmp_197_i1_reg_1740 and sel_tmp5_i1_fu_1155_p2);
    sel_tmp6_i_fu_1117_p2 <= (tmp_197_i_reg_1703 and sel_tmp5_i_fu_1112_p2);
    sel_tmp7_fu_1430_p3 <= 
        tmp_24_fu_1372_p1 when (sel_tmp6_fu_1425_p2(0) = '1') else 
        sel_tmp5_fu_1417_p3;
    sel_tmp8_fu_1438_p2 <= "1" when (sel_reg_1647 = ap_const_lv3_2) else "0";
    sel_tmp9_fu_1443_p3 <= 
        tmp_c_out_fu_1362_p1 when (sel_tmp8_fu_1438_p2(0) = '1') else 
        sel_tmp7_fu_1430_p3;
    sel_tmp_fu_1386_p2 <= "1" when (sel_reg_1647 = ap_const_lv3_7) else "0";
    shift_1_fu_927_p2 <= std_logic_vector(unsigned(c3_reg_1606) + unsigned(shift_fu_917_p2));
    shift_2_fu_937_p2 <= std_logic_vector(unsigned(c4_fu_894_p3) + unsigned(shift_1_fu_927_p2));
    shift_5_fu_1033_p2 <= std_logic_vector(unsigned(c2_1_reg_1628) + unsigned(ap_const_lv32_10));
    shift_6_fu_1043_p2 <= std_logic_vector(unsigned(c3_1_reg_1635) + unsigned(shift_5_fu_1033_p2));
    shift_7_fu_1053_p2 <= std_logic_vector(unsigned(c4_1_fu_1010_p3) + unsigned(shift_6_fu_1043_p2));
    shift_fu_917_p2 <= std_logic_vector(unsigned(c2_reg_1599) + unsigned(ap_const_lv32_10));
    t_in_s_out_fu_1464_p3 <= 
        t_in when (tmp_27_reg_1662(0) = '1') else 
        s_out_fu_1456_p3;
    tmp15_fu_1059_p2 <= (tmp_200_i1_fu_1038_p2 and tmp_203_i1_fu_1048_p2);
    tmp5_fu_943_p2 <= (tmp_200_i_fu_922_p2 and tmp_203_i_fu_932_p2);
    tmp_10_fu_1243_p4 <= tmp_i1_35_reg_1697(76 downto 25);
    tmp_11_fu_1252_p3 <= 
        tmp_32_fu_1236_p3 when (tmp_197_i_reg_1703(0) = '1') else 
        tmp_10_fu_1243_p4;
    tmp_12_fu_955_p1 <= shift_2_fu_937_p2(11 - 1 downto 0);
    tmp_133_i_fu_479_p4 <= grp_big_mult_v3_94_17_s_fu_296_ap_return(155 downto 78);
    tmp_134_i_fu_489_p4 <= tmp_185_i_fu_473_p2(78 downto 1);
    tmp_135_i_fu_499_p3 <= 
        tmp_134_i_fu_489_p4 when (tmp_5_reg_1537(0) = '1') else 
        tmp_133_i_fu_479_p4;
    tmp_13_fu_1165_p2 <= std_logic_vector(unsigned(tmp_33_reg_1642) + unsigned(ap_const_lv11_10));
    tmp_14_fu_1170_p3 <= 
        tmp_13_fu_1165_p2 when (sel_tmp6_i1_fu_1160_p2(0) = '1') else 
        tmp_38_reg_1756;
    tmp_15_fu_959_p1 <= shift_1_fu_927_p2(11 - 1 downto 0);
    tmp_16_fu_1283_p4 <= tmp_199_i1_reg_1782(76 downto 25);
    tmp_17_fu_963_p3 <= 
        tmp_12_fu_955_p1 when (sel_tmp1_i_fu_949_p2(0) = '1') else 
        tmp_15_fu_959_p1;
    tmp_185_i_fu_473_p2 <= std_logic_vector(signed(ap_const_lv79_6487ED5110B4611A6263) - signed(prod_adj_V_fu_463_p4));
    tmp_188_cast_fu_836_p1 <= std_logic_vector(resize(unsigned(tmp_43_fu_828_p3),76));
    tmp_18_fu_971_p1 <= c1_fu_886_p3(11 - 1 downto 0);
    tmp_197_i1_fu_1027_p2 <= "1" when (c1_1_fu_1002_p3 = ap_const_lv32_10) else "0";
    tmp_197_i_fu_911_p2 <= "1" when (c1_fu_886_p3 = ap_const_lv32_10) else "0";
    tmp_198_i1_fu_1147_p1 <= std_logic_vector(resize(unsigned(c2_1_reg_1628),78));
    tmp_198_i_fu_1104_p1 <= std_logic_vector(resize(unsigned(c2_reg_1599),78));
    tmp_199_i1_fu_1150_p2 <= std_logic_vector(shift_left(unsigned(tmp_i2_reg_1734),to_integer(unsigned('0' & tmp_198_i1_fu_1147_p1(31-1 downto 0)))));
    tmp_199_i_fu_1107_p2 <= std_logic_vector(shift_left(unsigned(tmp_i1_35_reg_1697),to_integer(unsigned('0' & tmp_198_i_fu_1104_p1(31-1 downto 0)))));
    tmp_199_i_i_fu_414_p1 <= std_logic_vector(resize(unsigned(tmp_4_reg_1507),256));
    tmp_19_fu_975_p3 <= 
        tmp_17_fu_963_p3 when (tmp_197_i_fu_911_p2(0) = '1') else 
        tmp_18_fu_971_p1;
    tmp_1_fu_1127_p3 <= 
        tmp_6_fu_1122_p2 when (sel_tmp6_i_fu_1117_p2(0) = '1') else 
        tmp_19_reg_1719;
    tmp_200_i1_fu_1038_p2 <= "1" when (c2_1_reg_1628 = ap_const_lv32_10) else "0";
    tmp_200_i_fu_922_p2 <= "1" when (c2_reg_1599 = ap_const_lv32_10) else "0";
    tmp_201_i1_fu_1266_p1 <= std_logic_vector(resize(unsigned(c3_1_reg_1635),78));
    tmp_201_i_fu_1190_p1 <= std_logic_vector(resize(unsigned(c3_reg_1606),78));
    tmp_202_i1_fu_1269_p2 <= std_logic_vector(shift_left(unsigned(tmp_199_i1_reg_1782),to_integer(unsigned('0' & tmp_201_i1_fu_1266_p1(31-1 downto 0)))));
    tmp_202_i_fu_1193_p2 <= std_logic_vector(shift_left(unsigned(tmp_199_i_reg_1766),to_integer(unsigned('0' & tmp_201_i_fu_1190_p1(31-1 downto 0)))));
    tmp_203_i1_fu_1048_p2 <= "1" when (c3_1_reg_1635 = ap_const_lv32_10) else "0";
    tmp_203_i_fu_932_p2 <= "1" when (c3_reg_1606 = ap_const_lv32_10) else "0";
    tmp_204_i1_fu_1274_p1 <= std_logic_vector(resize(unsigned(c4_1_reg_1729),78));
    tmp_204_i_fu_1198_p1 <= std_logic_vector(resize(unsigned(c4_reg_1692),78));
    tmp_205_i1_fu_1277_p2 <= std_logic_vector(shift_left(unsigned(tmp_202_i1_fu_1269_p2),to_integer(unsigned('0' & tmp_204_i1_fu_1274_p1(31-1 downto 0)))));
    tmp_205_i_fu_1201_p2 <= std_logic_vector(shift_left(unsigned(tmp_202_i_fu_1193_p2),to_integer(unsigned('0' & tmp_204_i_fu_1198_p1(31-1 downto 0)))));
    tmp_206_i1_fu_1099_p2 <= "1" when (p_Val2_16_reg_1583 = ap_const_lv78_0) else "0";
    tmp_206_i_fu_983_p2 <= "1" when (p_Val2_13_reg_1577 = ap_const_lv78_0) else "0";
    tmp_20_fu_1319_p4 <= tmp_i2_reg_1734(76 downto 25);
    tmp_21_fu_1328_p3 <= 
        tmp_41_fu_1312_p3 when (tmp_197_i1_reg_1740(0) = '1') else 
        tmp_20_fu_1319_p4;
    tmp_222_i_i_fu_396_p1 <= std_logic_vector(resize(unsigned(op2_assign_i_cast_fu_392_p1),78));
    tmp_223_i_i_fu_400_p2 <= std_logic_vector(shift_right(unsigned(r_V_fu_376_p4),to_integer(unsigned('0' & tmp_222_i_i_fu_396_p1(31-1 downto 0)))));
    tmp_22_fu_1216_p4 <= tmp_205_i_fu_1201_p2(76 downto 25);
    tmp_23_fu_751_p2 <= (k_V_reg_230 xor ap_const_lv3_7);
    tmp_245_neg_fu_1376_p2 <= (p_Result_11_fu_1354_p4 xor ap_const_lv64_8000000000000000);
    tmp_246_neg_fu_1366_p2 <= (p_Result_6_fu_1342_p4 xor ap_const_lv64_8000000000000000);
    tmp_24_fu_1372_p1 <= tmp_246_neg_fu_1366_p2;
    tmp_25_fu_1382_p1 <= tmp_245_neg_fu_1376_p2;
    tmp_26_fu_764_p2 <= "1" when (loc_V_reg_1487 = ap_const_lv11_7FF) else "0";
    tmp_27_fu_769_p2 <= "1" when (unsigned(loc_V_reg_1487) < unsigned(ap_const_lv11_3E7)) else "0";
    tmp_28_fu_549_p1 <= std_logic_vector(resize(unsigned(sh_assign_reg_285),64));
    tmp_2_fu_1207_p4 <= tmp_199_i_reg_1766(76 downto 25);
    tmp_31_fu_1226_p4 <= tmp_202_i_fu_1193_p2(76 downto 25);
    tmp_32_fu_1236_p3 <= 
        tmp_22_fu_1216_p4 when (sel_tmp1_i_reg_1714(0) = '1') else 
        tmp_31_fu_1226_p4;
    tmp_33_fu_747_p1 <= c2_1_fu_731_p3(11 - 1 downto 0);
    tmp_34_fu_1071_p1 <= shift_7_fu_1053_p2(11 - 1 downto 0);
    tmp_35_fu_1075_p1 <= shift_6_fu_1043_p2(11 - 1 downto 0);
    tmp_36_fu_1079_p3 <= 
        tmp_34_fu_1071_p1 when (sel_tmp1_i1_fu_1065_p2(0) = '1') else 
        tmp_35_fu_1075_p1;
    tmp_37_fu_1087_p1 <= c1_1_fu_1002_p3(11 - 1 downto 0);
    tmp_38_fu_1091_p3 <= 
        tmp_36_fu_1079_p3 when (tmp_197_i1_fu_1027_p2(0) = '1') else 
        tmp_37_fu_1087_p1;
    tmp_39_fu_1292_p4 <= tmp_205_i1_fu_1277_p2(76 downto 25);
    tmp_3_fu_343_p3 <= exp_fu_337_p2(11 downto 11);
    tmp_40_fu_1302_p4 <= tmp_202_i1_fu_1269_p2(76 downto 25);
    tmp_41_fu_1312_p3 <= 
        tmp_39_fu_1292_p4 when (sel_tmp1_i1_reg_1751(0) = '1') else 
        tmp_40_fu_1302_p4;
    tmp_43_fu_828_p3 <= hls_cordic_ctab_tab_q0(49 downto 49);
    tmp_4_fu_372_p1 <= addr_V_fu_351_p2(7 - 1 downto 0);
    tmp_6_fu_1122_p2 <= std_logic_vector(unsigned(tmp_9_reg_1613) + unsigned(ap_const_lv11_10));
    tmp_7_fu_559_p1 <= p_Val2_6_reg_261(77 - 1 downto 0);
    tmp_8_fu_571_p1 <= p_Val2_5_reg_273(77 - 1 downto 0);
    tmp_9_fu_671_p1 <= c2_fu_655_p3(11 - 1 downto 0);
    tmp_c_out_fu_1362_p1 <= p_Result_11_fu_1354_p4;
    tmp_fu_554_p2 <= "1" when (r_V_7_reg_1542 = ap_const_lv76_0) else "0";
    tmp_i1_35_fu_906_p2 <= std_logic_vector(shift_left(unsigned(p_Val2_13_reg_1577),to_integer(unsigned('0' & tmp_i1_fu_902_p1(31-1 downto 0)))));
    tmp_i1_fu_902_p1 <= std_logic_vector(resize(unsigned(c1_fu_886_p3),78));
    tmp_i2_fu_1022_p2 <= std_logic_vector(shift_left(unsigned(p_Val2_16_reg_1583),to_integer(unsigned('0' & tmp_i_fu_1018_p1(31-1 downto 0)))));
    tmp_i_cast_fu_333_p1 <= std_logic_vector(resize(unsigned(loc_V_fu_319_p4),12));
    tmp_i_fu_1018_p1 <= std_logic_vector(resize(unsigned(c1_1_fu_1002_p3),78));
    tmp_i_i_fu_367_p1 <= std_logic_vector(resize(unsigned(p_Result_i_i_fu_357_p4),64));
    tmp_s_fu_533_p1 <= std_logic_vector(resize(unsigned(sh_assign_reg_285),79));
    tmp_s_out_fu_1350_p1 <= p_Result_6_fu_1342_p4;
    tx_V_fu_794_p2 <= std_logic_vector(unsigned(p_Val2_5_reg_273) + unsigned(p_Val2_23_fu_787_p3));
    ty_V_fu_812_p2 <= std_logic_vector(unsigned(p_Val2_6_reg_261) + unsigned(p_Val2_24_fu_805_p3));
    tz_V_fu_866_p2 <= std_logic_vector(unsigned(p_Val2_7_reg_251) + unsigned(p_Val2_cast_fu_862_p1));
    x_s_V_fu_543_p2 <= std_logic_vector(shift_right(signed(p_Val2_5_reg_273),to_integer(unsigned('0' & tmp_s_fu_533_p1(31-1 downto 0)))));
    y_s_V_fu_537_p2 <= std_logic_vector(shift_right(signed(p_Val2_6_reg_261),to_integer(unsigned('0' & tmp_s_fu_533_p1(31-1 downto 0)))));
end behav;
