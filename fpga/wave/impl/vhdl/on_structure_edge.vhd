-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity on_structure_edge is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (31 downto 0);
    y : IN STD_LOGIC_VECTOR (31 downto 0);
    scenario_nr_struct : IN STD_LOGIC_VECTOR (31 downto 0);
    scenario_structure_c_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    scenario_structure_c_ce0 : OUT STD_LOGIC;
    scenario_structure_c_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of on_structure_edge is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv34_1 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv34_2 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000010";
    constant ap_const_lv34_3 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000011";
    constant ap_const_lv34_4 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000100";
    constant ap_const_lv34_6 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000110";
    constant ap_const_lv34_7 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000111";
    constant ap_const_lv34_5 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_6_fu_194_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_6_reg_348 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_s_fu_200_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_s_reg_353 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_fu_189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal scenario_structure_c_1_reg_369 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal scenario_structure_c_2_reg_374 : STD_LOGIC_VECTOR (6 downto 0);
    signal scenario_structure_c_3_reg_379 : STD_LOGIC_VECTOR (6 downto 0);
    signal scenario_structure_c_4_reg_384 : STD_LOGIC_VECTOR (6 downto 0);
    signal scenario_structure_c_5_reg_389 : STD_LOGIC_VECTOR (6 downto 0);
    signal scenario_structure_c_6_reg_394 : STD_LOGIC_VECTOR (6 downto 0);
    signal scenario_structure_c_7_reg_399 : STD_LOGIC_VECTOR (6 downto 0);
    signal scenario_structure_c_8_reg_404 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_132_reg_409 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_161_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_133_reg_413 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_fu_171_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_135_reg_420 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_fu_176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_136_reg_424 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_138_reg_431 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_139_reg_435 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal tmp_141_reg_442 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal tmp_143_fu_316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_143_reg_446 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_reg_120 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal or_cond_fu_320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0_reg_131 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_fu_166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_137_fu_311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal tmp_255_fu_214_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_259_fu_246_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_253_fu_223_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_257_fu_232_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_261_fu_260_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_265_fu_288_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_267_fu_302_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_263_fu_274_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_cast_fu_185_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_254_fu_208_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_256_fu_227_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_258_fu_241_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_260_fu_255_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_262_fu_269_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_264_fu_283_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_266_fu_297_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal ap_CS_fsm_state14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv3_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
                    ap_return_preg <= p_0_reg_131;
                end if; 
            end if;
        end if;
    end process;


    i_reg_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state13) and ((ap_const_lv1_0 = tmp_141_reg_442) or (ap_const_lv1_0 = or_cond_fu_320_p2)))) then 
                i_reg_120 <= i_6_reg_348;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_120 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    p_0_reg_131_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state13) and not((ap_const_lv1_0 = or_cond_fu_320_p2)) and not((ap_const_lv1_0 = tmp_141_reg_442)))) then 
                p_0_reg_131 <= ap_const_lv3_2;
            elsif ((not((ap_const_lv1_0 = grp_fu_166_p2)) and (ap_const_lv1_1 = ap_CS_fsm_state11) and not((ap_const_lv1_0 = tmp_138_reg_431)) and not((ap_const_lv1_0 = tmp_139_reg_435)))) then 
                p_0_reg_131 <= ap_const_lv3_3;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_lv1_0 = tmp_137_fu_311_p2)) and not((ap_const_lv1_0 = tmp_135_reg_420)) and not((ap_const_lv1_0 = tmp_136_reg_424)))) then 
                p_0_reg_131 <= ap_const_lv3_4;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and not((ap_const_lv1_0 = grp_fu_166_p2)) and not((ap_const_lv1_0 = tmp_132_reg_409)) and not((ap_const_lv1_0 = tmp_133_reg_413)))) then 
                p_0_reg_131 <= ap_const_lv3_1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and (tmp_fu_189_p2 = ap_const_lv1_0))) then 
                p_0_reg_131 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2))) then
                i_6_reg_348 <= i_6_fu_194_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then
                    scenario_structure_c_1_reg_369(6 downto 3) <= tmp_259_fu_246_p3(7 - 1 downto 0)(6 downto 3);
                    scenario_structure_c_2_reg_374(6 downto 3) <= tmp_253_fu_223_p1(7 - 1 downto 0)(6 downto 3);
                    scenario_structure_c_3_reg_379(6 downto 3) <= tmp_257_fu_232_p3(7 - 1 downto 0)(6 downto 3);
                    scenario_structure_c_4_reg_384(6 downto 3) <= tmp_261_fu_260_p3(7 - 1 downto 0)(6 downto 3);
                    scenario_structure_c_5_reg_389(6 downto 3) <= tmp_265_fu_288_p3(7 - 1 downto 0)(6 downto 3);
                    scenario_structure_c_6_reg_394(6 downto 3) <= tmp_267_fu_302_p3(7 - 1 downto 0)(6 downto 3);
                    scenario_structure_c_7_reg_399(6 downto 3) <= tmp_263_fu_274_p3(7 - 1 downto 0)(6 downto 3);
                scenario_structure_c_8_reg_404 <= scenario_structure_c_q0;
                tmp_132_reg_409 <= grp_fu_156_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4))) then
                tmp_133_reg_413 <= grp_fu_161_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state6))) then
                tmp_135_reg_420 <= grp_fu_171_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then
                tmp_136_reg_424 <= grp_fu_176_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state9))) then
                tmp_138_reg_431 <= grp_fu_156_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state10))) then
                tmp_139_reg_435 <= grp_fu_161_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then
                tmp_141_reg_442 <= grp_fu_171_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state12) and not((ap_const_lv1_0 = grp_fu_171_p2)))) then
                tmp_143_reg_446 <= tmp_143_fu_316_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((tmp_fu_189_p2 = ap_const_lv1_0)))) then
                    tmp_s_reg_353(33 downto 3) <= tmp_s_fu_200_p3(33 downto 3);
            end if;
        end if;
    end process;
    tmp_s_reg_353(2 downto 0) <= "000";
    scenario_structure_c_1_reg_369(2 downto 0) <= "011";
    scenario_structure_c_2_reg_374(2 downto 0) <= "000";
    scenario_structure_c_3_reg_379(2 downto 0) <= "010";
    scenario_structure_c_4_reg_384(2 downto 0) <= "100";
    scenario_structure_c_5_reg_389(2 downto 0) <= "111";
    scenario_structure_c_6_reg_394(2 downto 0) <= "101";
    scenario_structure_c_7_reg_399(2 downto 0) <= "110";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, tmp_fu_189_p2, grp_fu_156_p2, tmp_132_reg_409, tmp_133_reg_413, grp_fu_171_p2, tmp_135_reg_420, tmp_136_reg_424, tmp_138_reg_431, tmp_139_reg_435, tmp_141_reg_442, or_cond_fu_320_p2, grp_fu_166_p2, tmp_137_fu_311_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((tmp_fu_189_p2 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if ((ap_const_lv1_0 = grp_fu_156_p2)) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if ((not((ap_const_lv1_0 = grp_fu_166_p2)) and not((ap_const_lv1_0 = tmp_132_reg_409)) and not((ap_const_lv1_0 = tmp_133_reg_413)))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if ((ap_const_lv1_0 = grp_fu_171_p2)) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if ((not((ap_const_lv1_0 = tmp_137_fu_311_p2)) and not((ap_const_lv1_0 = tmp_135_reg_420)) and not((ap_const_lv1_0 = tmp_136_reg_424)))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if ((ap_const_lv1_0 = grp_fu_156_p2)) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if ((not((ap_const_lv1_0 = grp_fu_166_p2)) and not((ap_const_lv1_0 = tmp_138_reg_431)) and not((ap_const_lv1_0 = tmp_139_reg_435)))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((ap_const_lv1_0 = tmp_141_reg_442) or (ap_const_lv1_0 = or_cond_fu_320_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8 downto 8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state14)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state14)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(p_0_reg_131, ap_return_preg, ap_CS_fsm_state14)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            ap_return <= p_0_reg_131;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    grp_fu_156_p2 <= "1" when (signed(scenario_structure_c_q0) < signed(y)) else "0";
    grp_fu_161_p2 <= "1" when (signed(scenario_structure_c_q0) > signed(y)) else "0";
    grp_fu_166_p2 <= "1" when (scenario_structure_c_q0 = x) else "0";
    grp_fu_171_p2 <= "1" when (signed(scenario_structure_c_q0) < signed(x)) else "0";
    grp_fu_176_p2 <= "1" when (signed(scenario_structure_c_q0) > signed(x)) else "0";
    i_6_fu_194_p2 <= std_logic_vector(unsigned(i_reg_120) + unsigned(ap_const_lv31_1));
    i_cast_fu_185_p1 <= std_logic_vector(resize(unsigned(i_reg_120),32));
    or_cond_fu_320_p2 <= (grp_fu_176_p2 and tmp_143_reg_446);

    scenario_structure_c_address0_assign_proc : process(ap_CS_fsm_state2, scenario_structure_c_1_reg_369, ap_CS_fsm_state3, scenario_structure_c_2_reg_374, scenario_structure_c_3_reg_379, scenario_structure_c_4_reg_384, scenario_structure_c_5_reg_389, scenario_structure_c_6_reg_394, scenario_structure_c_7_reg_399, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state5, ap_CS_fsm_state8, ap_CS_fsm_state11, tmp_255_fu_214_p3, tmp_259_fu_246_p3)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state12)))) then 
            scenario_structure_c_address0 <= scenario_structure_c_7_reg_399;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            scenario_structure_c_address0 <= scenario_structure_c_6_reg_394;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            scenario_structure_c_address0 <= scenario_structure_c_5_reg_389;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
            scenario_structure_c_address0 <= scenario_structure_c_1_reg_369;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state6))) then 
            scenario_structure_c_address0 <= scenario_structure_c_4_reg_384;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state5))) then 
            scenario_structure_c_address0 <= scenario_structure_c_3_reg_379;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state4)) or ((ap_const_lv1_1 = ap_CS_fsm_state11)))) then 
            scenario_structure_c_address0 <= scenario_structure_c_2_reg_374;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            scenario_structure_c_address0 <= tmp_259_fu_246_p3(7 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            scenario_structure_c_address0 <= tmp_255_fu_214_p3(7 - 1 downto 0);
        else 
            scenario_structure_c_address0 <= "XXXXXXX";
        end if; 
    end process;


    scenario_structure_c_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state5, ap_CS_fsm_state8, ap_CS_fsm_state11)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state4)) or ((ap_const_lv1_1 = ap_CS_fsm_state6)) or ((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state5)) or ((ap_const_lv1_1 = ap_CS_fsm_state8)) or ((ap_const_lv1_1 = ap_CS_fsm_state11)))) then 
            scenario_structure_c_ce0 <= ap_const_logic_1;
        else 
            scenario_structure_c_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_137_fu_311_p2 <= "1" when (scenario_structure_c_q0 = y) else "0";
    tmp_143_fu_316_p2 <= "1" when (scenario_structure_c_8_reg_404 = y) else "0";
    tmp_253_fu_223_p1 <= std_logic_vector(resize(unsigned(tmp_s_reg_353),64));
    tmp_254_fu_208_p2 <= (tmp_s_fu_200_p3 or ap_const_lv34_1);
    tmp_255_fu_214_p3 <= (ap_const_lv30_0 & tmp_254_fu_208_p2);
    tmp_256_fu_227_p2 <= (tmp_s_reg_353 or ap_const_lv34_2);
    tmp_257_fu_232_p3 <= (ap_const_lv30_0 & tmp_256_fu_227_p2);
    tmp_258_fu_241_p2 <= (tmp_s_reg_353 or ap_const_lv34_3);
    tmp_259_fu_246_p3 <= (ap_const_lv30_0 & tmp_258_fu_241_p2);
    tmp_260_fu_255_p2 <= (tmp_s_reg_353 or ap_const_lv34_4);
    tmp_261_fu_260_p3 <= (ap_const_lv30_0 & tmp_260_fu_255_p2);
    tmp_262_fu_269_p2 <= (tmp_s_reg_353 or ap_const_lv34_6);
    tmp_263_fu_274_p3 <= (ap_const_lv30_0 & tmp_262_fu_269_p2);
    tmp_264_fu_283_p2 <= (tmp_s_reg_353 or ap_const_lv34_7);
    tmp_265_fu_288_p3 <= (ap_const_lv30_0 & tmp_264_fu_283_p2);
    tmp_266_fu_297_p2 <= (tmp_s_reg_353 or ap_const_lv34_5);
    tmp_267_fu_302_p3 <= (ap_const_lv30_0 & tmp_266_fu_297_p2);
    tmp_fu_189_p2 <= "1" when (signed(i_cast_fu_185_p1) < signed(scenario_nr_struct)) else "0";
    tmp_s_fu_200_p3 <= (i_reg_120 & ap_const_lv3_0);
end behav;
