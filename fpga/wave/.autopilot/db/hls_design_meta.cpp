#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("m_axi_result_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_result_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_result_AWADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_result_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_result_AWLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_result_AWSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_result_AWBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_result_AWLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_result_AWCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_result_AWPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_result_AWQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_result_AWREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_result_AWUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_result_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_result_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_result_WDATA", 64, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_result_WSTRB", 8, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_result_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_result_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_result_WUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_result_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_result_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_result_ARADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_result_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_result_ARLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_result_ARSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_result_ARBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_result_ARLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_result_ARCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_result_ARPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_result_ARQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_result_ARREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_result_ARUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_result_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_result_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_result_RDATA", 64, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_result_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_result_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_result_RUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_result_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_result_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_result_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_result_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_result_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_result_BUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("s_axi_CONTROL_BUS_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_AWADDR", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_ARADDR", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "s_compute_acoustics";
