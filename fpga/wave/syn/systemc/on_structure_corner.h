// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _on_structure_corner_HH_
#define _on_structure_corner_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct on_structure_corner : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > x;
    sc_in< sc_lv<32> > y;
    sc_in< sc_lv<32> > scenario_nr_struct;
    sc_out< sc_lv<7> > scenario_structure_c_address0;
    sc_out< sc_logic > scenario_structure_c_ce0;
    sc_in< sc_lv<32> > scenario_structure_c_q0;
    sc_out< sc_lv<4> > ap_return;


    // Module declarations
    on_structure_corner(sc_module_name name);
    SC_HAS_PROCESS(on_structure_corner);

    ~on_structure_corner();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > tmp_fu_175_p2;
    sc_signal< sc_lv<1> > tmp_reg_312;
    sc_signal< sc_lv<1> > ap_CS_fsm_state2;
    sc_signal< sc_lv<31> > i_7_fu_180_p2;
    sc_signal< sc_lv<31> > i_7_reg_316;
    sc_signal< sc_lv<34> > tmp_s_fu_186_p3;
    sc_signal< sc_lv<34> > tmp_s_reg_321;
    sc_signal< sc_lv<1> > ap_CS_fsm_state3;
    sc_signal< sc_lv<7> > scenario_structure_c_20_reg_342;
    sc_signal< sc_lv<7> > scenario_structure_c_21_reg_347;
    sc_signal< sc_lv<7> > scenario_structure_c_22_reg_352;
    sc_signal< sc_lv<7> > scenario_structure_c_23_reg_357;
    sc_signal< sc_lv<7> > scenario_structure_c_24_reg_362;
    sc_signal< sc_lv<7> > scenario_structure_c_25_reg_367;
    sc_signal< sc_lv<1> > grp_fu_157_p2;
    sc_signal< sc_lv<1> > tmp_144_reg_372;
    sc_signal< sc_lv<1> > grp_fu_162_p2;
    sc_signal< sc_lv<1> > tmp_145_reg_376;
    sc_signal< sc_lv<1> > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > tmp_146_reg_380;
    sc_signal< sc_lv<1> > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > tmp_147_reg_384;
    sc_signal< sc_lv<1> > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > tmp_148_reg_388;
    sc_signal< sc_lv<1> > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > tmp_149_reg_392;
    sc_signal< sc_lv<1> > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > tmp_150_reg_396;
    sc_signal< sc_lv<1> > ap_CS_fsm_state9;
    sc_signal< sc_lv<31> > i_reg_122;
    sc_signal< sc_lv<1> > ap_CS_fsm_state10;
    sc_signal< sc_lv<4> > p_0_phi_fu_140_p10;
    sc_signal< sc_lv<4> > p_0_reg_133;
    sc_signal< sc_lv<64> > tmp_268_fu_194_p1;
    sc_signal< sc_lv<64> > tmp_270_fu_204_p3;
    sc_signal< sc_lv<64> > tmp_272_fu_218_p3;
    sc_signal< sc_lv<64> > tmp_274_fu_232_p3;
    sc_signal< sc_lv<64> > tmp_276_fu_246_p3;
    sc_signal< sc_lv<64> > tmp_278_fu_260_p3;
    sc_signal< sc_lv<64> > tmp_280_fu_274_p3;
    sc_signal< sc_lv<64> > tmp_282_fu_288_p3;
    sc_signal< sc_lv<32> > i_cast_fu_171_p1;
    sc_signal< sc_lv<34> > tmp_269_fu_199_p2;
    sc_signal< sc_lv<34> > tmp_271_fu_213_p2;
    sc_signal< sc_lv<34> > tmp_273_fu_227_p2;
    sc_signal< sc_lv<34> > tmp_275_fu_241_p2;
    sc_signal< sc_lv<34> > tmp_277_fu_255_p2;
    sc_signal< sc_lv<34> > tmp_279_fu_269_p2;
    sc_signal< sc_lv<34> > tmp_281_fu_283_p2;
    sc_signal< sc_lv<4> > ap_return_preg;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<34> ap_const_lv34_1;
    static const sc_lv<30> ap_const_lv30_0;
    static const sc_lv<34> ap_const_lv34_2;
    static const sc_lv<34> ap_const_lv34_3;
    static const sc_lv<34> ap_const_lv34_4;
    static const sc_lv<34> ap_const_lv34_5;
    static const sc_lv<34> ap_const_lv34_6;
    static const sc_lv<34> ap_const_lv34_7;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_grp_fu_157_p2();
    void thread_grp_fu_162_p2();
    void thread_i_7_fu_180_p2();
    void thread_i_cast_fu_171_p1();
    void thread_p_0_phi_fu_140_p10();
    void thread_scenario_structure_c_address0();
    void thread_scenario_structure_c_ce0();
    void thread_tmp_268_fu_194_p1();
    void thread_tmp_269_fu_199_p2();
    void thread_tmp_270_fu_204_p3();
    void thread_tmp_271_fu_213_p2();
    void thread_tmp_272_fu_218_p3();
    void thread_tmp_273_fu_227_p2();
    void thread_tmp_274_fu_232_p3();
    void thread_tmp_275_fu_241_p2();
    void thread_tmp_276_fu_246_p3();
    void thread_tmp_277_fu_255_p2();
    void thread_tmp_278_fu_260_p3();
    void thread_tmp_279_fu_269_p2();
    void thread_tmp_280_fu_274_p3();
    void thread_tmp_281_fu_283_p2();
    void thread_tmp_282_fu_288_p3();
    void thread_tmp_fu_175_p2();
    void thread_tmp_s_fu_186_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
