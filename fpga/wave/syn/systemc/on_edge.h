// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _on_edge_HH_
#define _on_edge_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct on_edge : public sc_module {
    // Port declarations 11
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > x;
    sc_in< sc_lv<32> > y;
    sc_in< sc_lv<32> > nx;
    sc_in< sc_lv<32> > ny;
    sc_out< sc_lv<3> > ap_return;


    // Module declarations
    on_edge(sc_module_name name);
    SC_HAS_PROCESS(on_edge);

    ~on_edge();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > tmp20_fu_106_p2;
    sc_signal< sc_lv<1> > tmp20_reg_204;
    sc_signal< sc_lv<1> > tmp_159_fu_118_p2;
    sc_signal< sc_lv<1> > tmp_159_reg_209;
    sc_signal< sc_lv<1> > sel_tmp_fu_130_p2;
    sc_signal< sc_lv<1> > sel_tmp_reg_214;
    sc_signal< sc_lv<1> > sel_tmp7_fu_148_p2;
    sc_signal< sc_lv<1> > sel_tmp7_reg_219;
    sc_signal< sc_lv<1> > sel_tmp11_demorgan_fu_154_p2;
    sc_signal< sc_lv<1> > sel_tmp11_demorgan_reg_224;
    sc_signal< sc_lv<1> > tmp_fu_38_p2;
    sc_signal< sc_lv<1> > tmp_s_fu_44_p2;
    sc_signal< sc_lv<32> > tmp_152_fu_60_p2;
    sc_signal< sc_lv<32> > tmp_154_fu_76_p2;
    sc_signal< sc_lv<1> > tmp_157_fu_94_p2;
    sc_signal< sc_lv<1> > tmp_158_fu_100_p2;
    sc_signal< sc_lv<1> > tmp_156_fu_88_p2;
    sc_signal< sc_lv<1> > tmp_153_fu_66_p2;
    sc_signal< sc_lv<1> > tmp22_fu_124_p2;
    sc_signal< sc_lv<1> > tmp_155_fu_82_p2;
    sc_signal< sc_lv<1> > or_cond_fu_50_p2;
    sc_signal< sc_lv<1> > sel_tmp2_fu_136_p2;
    sc_signal< sc_lv<1> > sel_tmp6_fu_142_p2;
    sc_signal< sc_lv<1> > or_cond4_fu_112_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > or_cond5_fu_160_p2;
    sc_signal< sc_lv<3> > p_s_fu_164_p3;
    sc_signal< sc_lv<3> > sel_tmp8_fu_172_p3;
    sc_signal< sc_lv<1> > sel_tmp3_fu_186_p2;
    sc_signal< sc_lv<1> > sel_tmp4_fu_191_p2;
    sc_signal< sc_lv<3> > sel_tmp1_fu_179_p3;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_3;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_or_cond4_fu_112_p2();
    void thread_or_cond5_fu_160_p2();
    void thread_or_cond_fu_50_p2();
    void thread_p_s_fu_164_p3();
    void thread_sel_tmp11_demorgan_fu_154_p2();
    void thread_sel_tmp1_fu_179_p3();
    void thread_sel_tmp2_fu_136_p2();
    void thread_sel_tmp3_fu_186_p2();
    void thread_sel_tmp4_fu_191_p2();
    void thread_sel_tmp6_fu_142_p2();
    void thread_sel_tmp7_fu_148_p2();
    void thread_sel_tmp8_fu_172_p3();
    void thread_sel_tmp_fu_130_p2();
    void thread_tmp20_fu_106_p2();
    void thread_tmp22_fu_124_p2();
    void thread_tmp_152_fu_60_p2();
    void thread_tmp_153_fu_66_p2();
    void thread_tmp_154_fu_76_p2();
    void thread_tmp_155_fu_82_p2();
    void thread_tmp_156_fu_88_p2();
    void thread_tmp_157_fu_94_p2();
    void thread_tmp_158_fu_100_p2();
    void thread_tmp_159_fu_118_p2();
    void thread_tmp_fu_38_p2();
    void thread_tmp_s_fu_44_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
