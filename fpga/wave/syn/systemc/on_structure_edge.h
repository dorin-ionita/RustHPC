// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _on_structure_edge_HH_
#define _on_structure_edge_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct on_structure_edge : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > x;
    sc_in< sc_lv<32> > y;
    sc_in< sc_lv<32> > scenario_nr_struct;
    sc_out< sc_lv<7> > scenario_structure_c_address0;
    sc_out< sc_logic > scenario_structure_c_ce0;
    sc_in< sc_lv<32> > scenario_structure_c_q0;
    sc_out< sc_lv<3> > ap_return;


    // Module declarations
    on_structure_edge(sc_module_name name);
    SC_HAS_PROCESS(on_structure_edge);

    ~on_structure_edge();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<14> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<31> > i_6_fu_194_p2;
    sc_signal< sc_lv<31> > i_6_reg_348;
    sc_signal< sc_lv<1> > ap_CS_fsm_state2;
    sc_signal< sc_lv<34> > tmp_s_fu_200_p3;
    sc_signal< sc_lv<34> > tmp_s_reg_353;
    sc_signal< sc_lv<1> > tmp_fu_189_p2;
    sc_signal< sc_lv<7> > scenario_structure_c_1_reg_369;
    sc_signal< sc_lv<1> > ap_CS_fsm_state3;
    sc_signal< sc_lv<7> > scenario_structure_c_2_reg_374;
    sc_signal< sc_lv<7> > scenario_structure_c_3_reg_379;
    sc_signal< sc_lv<7> > scenario_structure_c_4_reg_384;
    sc_signal< sc_lv<7> > scenario_structure_c_5_reg_389;
    sc_signal< sc_lv<7> > scenario_structure_c_6_reg_394;
    sc_signal< sc_lv<7> > scenario_structure_c_7_reg_399;
    sc_signal< sc_lv<32> > scenario_structure_c_8_reg_404;
    sc_signal< sc_lv<1> > grp_fu_156_p2;
    sc_signal< sc_lv<1> > tmp_132_reg_409;
    sc_signal< sc_lv<1> > grp_fu_161_p2;
    sc_signal< sc_lv<1> > tmp_133_reg_413;
    sc_signal< sc_lv<1> > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > grp_fu_171_p2;
    sc_signal< sc_lv<1> > tmp_135_reg_420;
    sc_signal< sc_lv<1> > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > grp_fu_176_p2;
    sc_signal< sc_lv<1> > tmp_136_reg_424;
    sc_signal< sc_lv<1> > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > tmp_138_reg_431;
    sc_signal< sc_lv<1> > ap_CS_fsm_state9;
    sc_signal< sc_lv<1> > tmp_139_reg_435;
    sc_signal< sc_lv<1> > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > tmp_141_reg_442;
    sc_signal< sc_lv<1> > ap_CS_fsm_state12;
    sc_signal< sc_lv<1> > tmp_143_fu_316_p2;
    sc_signal< sc_lv<1> > tmp_143_reg_446;
    sc_signal< sc_lv<31> > i_reg_120;
    sc_signal< sc_lv<1> > ap_CS_fsm_state13;
    sc_signal< sc_lv<1> > or_cond_fu_320_p2;
    sc_signal< sc_lv<3> > p_0_reg_131;
    sc_signal< sc_lv<1> > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > grp_fu_166_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > tmp_137_fu_311_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state11;
    sc_signal< sc_lv<64> > tmp_255_fu_214_p3;
    sc_signal< sc_lv<64> > tmp_259_fu_246_p3;
    sc_signal< sc_lv<64> > tmp_253_fu_223_p1;
    sc_signal< sc_lv<64> > tmp_257_fu_232_p3;
    sc_signal< sc_lv<64> > tmp_261_fu_260_p3;
    sc_signal< sc_lv<64> > tmp_265_fu_288_p3;
    sc_signal< sc_lv<64> > tmp_267_fu_302_p3;
    sc_signal< sc_lv<64> > tmp_263_fu_274_p3;
    sc_signal< sc_lv<32> > i_cast_fu_185_p1;
    sc_signal< sc_lv<34> > tmp_254_fu_208_p2;
    sc_signal< sc_lv<34> > tmp_256_fu_227_p2;
    sc_signal< sc_lv<34> > tmp_258_fu_241_p2;
    sc_signal< sc_lv<34> > tmp_260_fu_255_p2;
    sc_signal< sc_lv<34> > tmp_262_fu_269_p2;
    sc_signal< sc_lv<34> > tmp_264_fu_283_p2;
    sc_signal< sc_lv<34> > tmp_266_fu_297_p2;
    sc_signal< sc_lv<3> > ap_return_preg;
    sc_signal< sc_lv<1> > ap_CS_fsm_state14;
    sc_signal< sc_lv<14> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<14> ap_ST_fsm_state1;
    static const sc_lv<14> ap_ST_fsm_state2;
    static const sc_lv<14> ap_ST_fsm_state3;
    static const sc_lv<14> ap_ST_fsm_state4;
    static const sc_lv<14> ap_ST_fsm_state5;
    static const sc_lv<14> ap_ST_fsm_state6;
    static const sc_lv<14> ap_ST_fsm_state7;
    static const sc_lv<14> ap_ST_fsm_state8;
    static const sc_lv<14> ap_ST_fsm_state9;
    static const sc_lv<14> ap_ST_fsm_state10;
    static const sc_lv<14> ap_ST_fsm_state11;
    static const sc_lv<14> ap_ST_fsm_state12;
    static const sc_lv<14> ap_ST_fsm_state13;
    static const sc_lv<14> ap_ST_fsm_state14;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<34> ap_const_lv34_1;
    static const sc_lv<30> ap_const_lv30_0;
    static const sc_lv<34> ap_const_lv34_2;
    static const sc_lv<34> ap_const_lv34_3;
    static const sc_lv<34> ap_const_lv34_4;
    static const sc_lv<34> ap_const_lv34_6;
    static const sc_lv<34> ap_const_lv34_7;
    static const sc_lv<34> ap_const_lv34_5;
    static const sc_lv<32> ap_const_lv32_D;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_grp_fu_156_p2();
    void thread_grp_fu_161_p2();
    void thread_grp_fu_166_p2();
    void thread_grp_fu_171_p2();
    void thread_grp_fu_176_p2();
    void thread_i_6_fu_194_p2();
    void thread_i_cast_fu_185_p1();
    void thread_or_cond_fu_320_p2();
    void thread_scenario_structure_c_address0();
    void thread_scenario_structure_c_ce0();
    void thread_tmp_137_fu_311_p2();
    void thread_tmp_143_fu_316_p2();
    void thread_tmp_253_fu_223_p1();
    void thread_tmp_254_fu_208_p2();
    void thread_tmp_255_fu_214_p3();
    void thread_tmp_256_fu_227_p2();
    void thread_tmp_257_fu_232_p3();
    void thread_tmp_258_fu_241_p2();
    void thread_tmp_259_fu_246_p3();
    void thread_tmp_260_fu_255_p2();
    void thread_tmp_261_fu_260_p3();
    void thread_tmp_262_fu_269_p2();
    void thread_tmp_263_fu_274_p3();
    void thread_tmp_264_fu_283_p2();
    void thread_tmp_265_fu_288_p3();
    void thread_tmp_266_fu_297_p2();
    void thread_tmp_267_fu_302_p3();
    void thread_tmp_fu_189_p2();
    void thread_tmp_s_fu_200_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
