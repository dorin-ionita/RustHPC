// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "on_structure_edge.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic on_structure_edge::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic on_structure_edge::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<14> on_structure_edge::ap_ST_fsm_state1 = "1";
const sc_lv<14> on_structure_edge::ap_ST_fsm_state2 = "10";
const sc_lv<14> on_structure_edge::ap_ST_fsm_state3 = "100";
const sc_lv<14> on_structure_edge::ap_ST_fsm_state4 = "1000";
const sc_lv<14> on_structure_edge::ap_ST_fsm_state5 = "10000";
const sc_lv<14> on_structure_edge::ap_ST_fsm_state6 = "100000";
const sc_lv<14> on_structure_edge::ap_ST_fsm_state7 = "1000000";
const sc_lv<14> on_structure_edge::ap_ST_fsm_state8 = "10000000";
const sc_lv<14> on_structure_edge::ap_ST_fsm_state9 = "100000000";
const sc_lv<14> on_structure_edge::ap_ST_fsm_state10 = "1000000000";
const sc_lv<14> on_structure_edge::ap_ST_fsm_state11 = "10000000000";
const sc_lv<14> on_structure_edge::ap_ST_fsm_state12 = "100000000000";
const sc_lv<14> on_structure_edge::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<14> on_structure_edge::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<32> on_structure_edge::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> on_structure_edge::ap_const_lv1_1 = "1";
const sc_lv<32> on_structure_edge::ap_const_lv32_1 = "1";
const sc_lv<1> on_structure_edge::ap_const_lv1_0 = "0";
const sc_lv<32> on_structure_edge::ap_const_lv32_2 = "10";
const sc_lv<32> on_structure_edge::ap_const_lv32_3 = "11";
const sc_lv<32> on_structure_edge::ap_const_lv32_5 = "101";
const sc_lv<32> on_structure_edge::ap_const_lv32_6 = "110";
const sc_lv<32> on_structure_edge::ap_const_lv32_8 = "1000";
const sc_lv<32> on_structure_edge::ap_const_lv32_9 = "1001";
const sc_lv<32> on_structure_edge::ap_const_lv32_B = "1011";
const sc_lv<31> on_structure_edge::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> on_structure_edge::ap_const_lv32_C = "1100";
const sc_lv<3> on_structure_edge::ap_const_lv3_0 = "000";
const sc_lv<3> on_structure_edge::ap_const_lv3_1 = "1";
const sc_lv<32> on_structure_edge::ap_const_lv32_4 = "100";
const sc_lv<3> on_structure_edge::ap_const_lv3_4 = "100";
const sc_lv<32> on_structure_edge::ap_const_lv32_7 = "111";
const sc_lv<3> on_structure_edge::ap_const_lv3_3 = "11";
const sc_lv<32> on_structure_edge::ap_const_lv32_A = "1010";
const sc_lv<3> on_structure_edge::ap_const_lv3_2 = "10";
const sc_lv<31> on_structure_edge::ap_const_lv31_1 = "1";
const sc_lv<34> on_structure_edge::ap_const_lv34_1 = "1";
const sc_lv<30> on_structure_edge::ap_const_lv30_0 = "000000000000000000000000000000";
const sc_lv<34> on_structure_edge::ap_const_lv34_2 = "10";
const sc_lv<34> on_structure_edge::ap_const_lv34_3 = "11";
const sc_lv<34> on_structure_edge::ap_const_lv34_4 = "100";
const sc_lv<34> on_structure_edge::ap_const_lv34_6 = "110";
const sc_lv<34> on_structure_edge::ap_const_lv34_7 = "111";
const sc_lv<34> on_structure_edge::ap_const_lv34_5 = "101";
const sc_lv<32> on_structure_edge::ap_const_lv32_D = "1101";

on_structure_edge::on_structure_edge(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_ap_return);
    sensitive << ( p_0_reg_131 );
    sensitive << ( ap_return_preg );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_grp_fu_156_p2);
    sensitive << ( y );
    sensitive << ( scenario_structure_c_q0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_grp_fu_161_p2);
    sensitive << ( y );
    sensitive << ( scenario_structure_c_q0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_grp_fu_166_p2);
    sensitive << ( x );
    sensitive << ( scenario_structure_c_q0 );
    sensitive << ( tmp_132_reg_409 );
    sensitive << ( tmp_133_reg_413 );
    sensitive << ( tmp_138_reg_431 );
    sensitive << ( tmp_139_reg_435 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_fu_171_p2);
    sensitive << ( x );
    sensitive << ( scenario_structure_c_q0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_grp_fu_176_p2);
    sensitive << ( x );
    sensitive << ( scenario_structure_c_q0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_141_reg_442 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_i_6_fu_194_p2);
    sensitive << ( i_reg_120 );

    SC_METHOD(thread_i_cast_fu_185_p1);
    sensitive << ( i_reg_120 );

    SC_METHOD(thread_or_cond_fu_320_p2);
    sensitive << ( grp_fu_176_p2 );
    sensitive << ( tmp_143_reg_446 );

    SC_METHOD(thread_scenario_structure_c_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( scenario_structure_c_1_reg_369 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( scenario_structure_c_2_reg_374 );
    sensitive << ( scenario_structure_c_3_reg_379 );
    sensitive << ( scenario_structure_c_4_reg_384 );
    sensitive << ( scenario_structure_c_5_reg_389 );
    sensitive << ( scenario_structure_c_6_reg_394 );
    sensitive << ( scenario_structure_c_7_reg_399 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_255_fu_214_p3 );
    sensitive << ( tmp_259_fu_246_p3 );

    SC_METHOD(thread_scenario_structure_c_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_tmp_137_fu_311_p2);
    sensitive << ( y );
    sensitive << ( scenario_structure_c_q0 );
    sensitive << ( tmp_135_reg_420 );
    sensitive << ( tmp_136_reg_424 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_tmp_143_fu_316_p2);
    sensitive << ( y );
    sensitive << ( scenario_structure_c_8_reg_404 );
    sensitive << ( grp_fu_171_p2 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_tmp_253_fu_223_p1);
    sensitive << ( tmp_s_reg_353 );

    SC_METHOD(thread_tmp_254_fu_208_p2);
    sensitive << ( tmp_s_fu_200_p3 );

    SC_METHOD(thread_tmp_255_fu_214_p3);
    sensitive << ( tmp_254_fu_208_p2 );

    SC_METHOD(thread_tmp_256_fu_227_p2);
    sensitive << ( tmp_s_reg_353 );

    SC_METHOD(thread_tmp_257_fu_232_p3);
    sensitive << ( tmp_256_fu_227_p2 );

    SC_METHOD(thread_tmp_258_fu_241_p2);
    sensitive << ( tmp_s_reg_353 );

    SC_METHOD(thread_tmp_259_fu_246_p3);
    sensitive << ( tmp_258_fu_241_p2 );

    SC_METHOD(thread_tmp_260_fu_255_p2);
    sensitive << ( tmp_s_reg_353 );

    SC_METHOD(thread_tmp_261_fu_260_p3);
    sensitive << ( tmp_260_fu_255_p2 );

    SC_METHOD(thread_tmp_262_fu_269_p2);
    sensitive << ( tmp_s_reg_353 );

    SC_METHOD(thread_tmp_263_fu_274_p3);
    sensitive << ( tmp_262_fu_269_p2 );

    SC_METHOD(thread_tmp_264_fu_283_p2);
    sensitive << ( tmp_s_reg_353 );

    SC_METHOD(thread_tmp_265_fu_288_p3);
    sensitive << ( tmp_264_fu_283_p2 );

    SC_METHOD(thread_tmp_266_fu_297_p2);
    sensitive << ( tmp_s_reg_353 );

    SC_METHOD(thread_tmp_267_fu_302_p3);
    sensitive << ( tmp_266_fu_297_p2 );

    SC_METHOD(thread_tmp_fu_189_p2);
    sensitive << ( scenario_nr_struct );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_cast_fu_185_p1 );

    SC_METHOD(thread_tmp_s_fu_200_p3);
    sensitive << ( i_reg_120 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_fu_189_p2 );
    sensitive << ( grp_fu_156_p2 );
    sensitive << ( tmp_132_reg_409 );
    sensitive << ( tmp_133_reg_413 );
    sensitive << ( grp_fu_171_p2 );
    sensitive << ( tmp_135_reg_420 );
    sensitive << ( tmp_136_reg_424 );
    sensitive << ( tmp_138_reg_431 );
    sensitive << ( tmp_139_reg_435 );
    sensitive << ( tmp_141_reg_442 );
    sensitive << ( or_cond_fu_320_p2 );
    sensitive << ( grp_fu_166_p2 );
    sensitive << ( tmp_137_fu_311_p2 );

    ap_CS_fsm = "00000000000001";
    ap_return_preg = "000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "on_structure_edge_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x, "(port)x");
    sc_trace(mVcdFile, y, "(port)y");
    sc_trace(mVcdFile, scenario_nr_struct, "(port)scenario_nr_struct");
    sc_trace(mVcdFile, scenario_structure_c_address0, "(port)scenario_structure_c_address0");
    sc_trace(mVcdFile, scenario_structure_c_ce0, "(port)scenario_structure_c_ce0");
    sc_trace(mVcdFile, scenario_structure_c_q0, "(port)scenario_structure_c_q0");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_6_fu_194_p2, "i_6_fu_194_p2");
    sc_trace(mVcdFile, i_6_reg_348, "i_6_reg_348");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_s_fu_200_p3, "tmp_s_fu_200_p3");
    sc_trace(mVcdFile, tmp_s_reg_353, "tmp_s_reg_353");
    sc_trace(mVcdFile, tmp_fu_189_p2, "tmp_fu_189_p2");
    sc_trace(mVcdFile, scenario_structure_c_1_reg_369, "scenario_structure_c_1_reg_369");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, scenario_structure_c_2_reg_374, "scenario_structure_c_2_reg_374");
    sc_trace(mVcdFile, scenario_structure_c_3_reg_379, "scenario_structure_c_3_reg_379");
    sc_trace(mVcdFile, scenario_structure_c_4_reg_384, "scenario_structure_c_4_reg_384");
    sc_trace(mVcdFile, scenario_structure_c_5_reg_389, "scenario_structure_c_5_reg_389");
    sc_trace(mVcdFile, scenario_structure_c_6_reg_394, "scenario_structure_c_6_reg_394");
    sc_trace(mVcdFile, scenario_structure_c_7_reg_399, "scenario_structure_c_7_reg_399");
    sc_trace(mVcdFile, scenario_structure_c_8_reg_404, "scenario_structure_c_8_reg_404");
    sc_trace(mVcdFile, grp_fu_156_p2, "grp_fu_156_p2");
    sc_trace(mVcdFile, tmp_132_reg_409, "tmp_132_reg_409");
    sc_trace(mVcdFile, grp_fu_161_p2, "grp_fu_161_p2");
    sc_trace(mVcdFile, tmp_133_reg_413, "tmp_133_reg_413");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_fu_171_p2, "grp_fu_171_p2");
    sc_trace(mVcdFile, tmp_135_reg_420, "tmp_135_reg_420");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_fu_176_p2, "grp_fu_176_p2");
    sc_trace(mVcdFile, tmp_136_reg_424, "tmp_136_reg_424");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_138_reg_431, "tmp_138_reg_431");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_139_reg_435, "tmp_139_reg_435");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_141_reg_442, "tmp_141_reg_442");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_143_fu_316_p2, "tmp_143_fu_316_p2");
    sc_trace(mVcdFile, tmp_143_reg_446, "tmp_143_reg_446");
    sc_trace(mVcdFile, i_reg_120, "i_reg_120");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, or_cond_fu_320_p2, "or_cond_fu_320_p2");
    sc_trace(mVcdFile, p_0_reg_131, "p_0_reg_131");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_fu_166_p2, "grp_fu_166_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_137_fu_311_p2, "tmp_137_fu_311_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, tmp_255_fu_214_p3, "tmp_255_fu_214_p3");
    sc_trace(mVcdFile, tmp_259_fu_246_p3, "tmp_259_fu_246_p3");
    sc_trace(mVcdFile, tmp_253_fu_223_p1, "tmp_253_fu_223_p1");
    sc_trace(mVcdFile, tmp_257_fu_232_p3, "tmp_257_fu_232_p3");
    sc_trace(mVcdFile, tmp_261_fu_260_p3, "tmp_261_fu_260_p3");
    sc_trace(mVcdFile, tmp_265_fu_288_p3, "tmp_265_fu_288_p3");
    sc_trace(mVcdFile, tmp_267_fu_302_p3, "tmp_267_fu_302_p3");
    sc_trace(mVcdFile, tmp_263_fu_274_p3, "tmp_263_fu_274_p3");
    sc_trace(mVcdFile, i_cast_fu_185_p1, "i_cast_fu_185_p1");
    sc_trace(mVcdFile, tmp_254_fu_208_p2, "tmp_254_fu_208_p2");
    sc_trace(mVcdFile, tmp_256_fu_227_p2, "tmp_256_fu_227_p2");
    sc_trace(mVcdFile, tmp_258_fu_241_p2, "tmp_258_fu_241_p2");
    sc_trace(mVcdFile, tmp_260_fu_255_p2, "tmp_260_fu_255_p2");
    sc_trace(mVcdFile, tmp_262_fu_269_p2, "tmp_262_fu_269_p2");
    sc_trace(mVcdFile, tmp_264_fu_283_p2, "tmp_264_fu_283_p2");
    sc_trace(mVcdFile, tmp_266_fu_297_p2, "tmp_266_fu_297_p2");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

on_structure_edge::~on_structure_edge() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void on_structure_edge::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv3_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()))) {
            ap_return_preg = p_0_reg_131.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()) && 
         (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_141_reg_442.read()) || 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_320_p2.read())))) {
        i_reg_120 = i_6_reg_348.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_120 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_320_p2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_141_reg_442.read()))) {
        p_0_reg_131 = ap_const_lv3_2;
    } else if ((!esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_166_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_138_reg_431.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_139_reg_435.read()))) {
        p_0_reg_131 = ap_const_lv3_3;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_137_fu_311_p2.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_135_reg_420.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_136_reg_424.read()))) {
        p_0_reg_131 = ap_const_lv3_4;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_166_p2.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_132_reg_409.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_133_reg_413.read()))) {
        p_0_reg_131 = ap_const_lv3_1;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(tmp_fu_189_p2.read(), ap_const_lv1_0))) {
        p_0_reg_131 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        i_6_reg_348 = i_6_fu_194_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        scenario_structure_c_1_reg_369 =  (sc_lv<7>) (tmp_259_fu_246_p3.read());
        scenario_structure_c_2_reg_374 =  (sc_lv<7>) (tmp_253_fu_223_p1.read());
        scenario_structure_c_3_reg_379 =  (sc_lv<7>) (tmp_257_fu_232_p3.read());
        scenario_structure_c_4_reg_384 =  (sc_lv<7>) (tmp_261_fu_260_p3.read());
        scenario_structure_c_5_reg_389 =  (sc_lv<7>) (tmp_265_fu_288_p3.read());
        scenario_structure_c_6_reg_394 =  (sc_lv<7>) (tmp_267_fu_302_p3.read());
        scenario_structure_c_7_reg_399 =  (sc_lv<7>) (tmp_263_fu_274_p3.read());
        scenario_structure_c_8_reg_404 = scenario_structure_c_q0.read();
        tmp_132_reg_409 = grp_fu_156_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        tmp_133_reg_413 = grp_fu_161_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()))) {
        tmp_135_reg_420 = grp_fu_171_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        tmp_136_reg_424 = grp_fu_176_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        tmp_138_reg_431 = grp_fu_156_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        tmp_139_reg_435 = grp_fu_161_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        tmp_141_reg_442 = grp_fu_171_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_171_p2.read()))) {
        tmp_143_reg_446 = tmp_143_fu_316_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && !esl_seteq<1,1,1>(tmp_fu_189_p2.read(), ap_const_lv1_0))) {
        tmp_s_reg_353 = tmp_s_fu_200_p3.read();
    }
}

void on_structure_edge::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void on_structure_edge::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read().range(9, 9);
}

void on_structure_edge::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read().range(10, 10);
}

void on_structure_edge::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read().range(11, 11);
}

void on_structure_edge::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read().range(12, 12);
}

void on_structure_edge::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read().range(13, 13);
}

void on_structure_edge::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void on_structure_edge::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read().range(2, 2);
}

void on_structure_edge::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(3, 3);
}

void on_structure_edge::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read().range(4, 4);
}

void on_structure_edge::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read().range(5, 5);
}

void on_structure_edge::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read().range(6, 6);
}

void on_structure_edge::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read().range(7, 7);
}

void on_structure_edge::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read().range(8, 8);
}

void on_structure_edge::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void on_structure_edge::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void on_structure_edge::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void on_structure_edge::thread_ap_return() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()))) {
        ap_return = p_0_reg_131.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void on_structure_edge::thread_grp_fu_156_p2() {
    grp_fu_156_p2 = (!scenario_structure_c_q0.read().is_01() || !y.read().is_01())? sc_lv<1>(): (sc_bigint<32>(scenario_structure_c_q0.read()) < sc_bigint<32>(y.read()));
}

void on_structure_edge::thread_grp_fu_161_p2() {
    grp_fu_161_p2 = (!scenario_structure_c_q0.read().is_01() || !y.read().is_01())? sc_lv<1>(): (sc_bigint<32>(scenario_structure_c_q0.read()) > sc_bigint<32>(y.read()));
}

void on_structure_edge::thread_grp_fu_166_p2() {
    grp_fu_166_p2 = (!scenario_structure_c_q0.read().is_01() || !x.read().is_01())? sc_lv<1>(): sc_lv<1>(scenario_structure_c_q0.read() == x.read());
}

void on_structure_edge::thread_grp_fu_171_p2() {
    grp_fu_171_p2 = (!scenario_structure_c_q0.read().is_01() || !x.read().is_01())? sc_lv<1>(): (sc_bigint<32>(scenario_structure_c_q0.read()) < sc_bigint<32>(x.read()));
}

void on_structure_edge::thread_grp_fu_176_p2() {
    grp_fu_176_p2 = (!scenario_structure_c_q0.read().is_01() || !x.read().is_01())? sc_lv<1>(): (sc_bigint<32>(scenario_structure_c_q0.read()) > sc_bigint<32>(x.read()));
}

void on_structure_edge::thread_i_6_fu_194_p2() {
    i_6_fu_194_p2 = (!i_reg_120.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i_reg_120.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void on_structure_edge::thread_i_cast_fu_185_p1() {
    i_cast_fu_185_p1 = esl_zext<32,31>(i_reg_120.read());
}

void on_structure_edge::thread_or_cond_fu_320_p2() {
    or_cond_fu_320_p2 = (grp_fu_176_p2.read() & tmp_143_reg_446.read());
}

void on_structure_edge::thread_scenario_structure_c_address0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read())))) {
        scenario_structure_c_address0 = scenario_structure_c_7_reg_399.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        scenario_structure_c_address0 = scenario_structure_c_6_reg_394.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()))) {
        scenario_structure_c_address0 = scenario_structure_c_5_reg_389.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        scenario_structure_c_address0 = scenario_structure_c_1_reg_369.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()))) {
        scenario_structure_c_address0 = scenario_structure_c_4_reg_384.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        scenario_structure_c_address0 = scenario_structure_c_3_reg_379.read();
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read())))) {
        scenario_structure_c_address0 = scenario_structure_c_2_reg_374.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        scenario_structure_c_address0 =  (sc_lv<7>) (tmp_259_fu_246_p3.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        scenario_structure_c_address0 =  (sc_lv<7>) (tmp_255_fu_214_p3.read());
    } else {
        scenario_structure_c_address0 = "XXXXXXX";
    }
}

void on_structure_edge::thread_scenario_structure_c_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read())))) {
        scenario_structure_c_ce0 = ap_const_logic_1;
    } else {
        scenario_structure_c_ce0 = ap_const_logic_0;
    }
}

void on_structure_edge::thread_tmp_137_fu_311_p2() {
    tmp_137_fu_311_p2 = (!scenario_structure_c_q0.read().is_01() || !y.read().is_01())? sc_lv<1>(): sc_lv<1>(scenario_structure_c_q0.read() == y.read());
}

void on_structure_edge::thread_tmp_143_fu_316_p2() {
    tmp_143_fu_316_p2 = (!scenario_structure_c_8_reg_404.read().is_01() || !y.read().is_01())? sc_lv<1>(): sc_lv<1>(scenario_structure_c_8_reg_404.read() == y.read());
}

void on_structure_edge::thread_tmp_253_fu_223_p1() {
    tmp_253_fu_223_p1 = esl_zext<64,34>(tmp_s_reg_353.read());
}

void on_structure_edge::thread_tmp_254_fu_208_p2() {
    tmp_254_fu_208_p2 = (tmp_s_fu_200_p3.read() | ap_const_lv34_1);
}

void on_structure_edge::thread_tmp_255_fu_214_p3() {
    tmp_255_fu_214_p3 = esl_concat<30,34>(ap_const_lv30_0, tmp_254_fu_208_p2.read());
}

void on_structure_edge::thread_tmp_256_fu_227_p2() {
    tmp_256_fu_227_p2 = (tmp_s_reg_353.read() | ap_const_lv34_2);
}

void on_structure_edge::thread_tmp_257_fu_232_p3() {
    tmp_257_fu_232_p3 = esl_concat<30,34>(ap_const_lv30_0, tmp_256_fu_227_p2.read());
}

void on_structure_edge::thread_tmp_258_fu_241_p2() {
    tmp_258_fu_241_p2 = (tmp_s_reg_353.read() | ap_const_lv34_3);
}

void on_structure_edge::thread_tmp_259_fu_246_p3() {
    tmp_259_fu_246_p3 = esl_concat<30,34>(ap_const_lv30_0, tmp_258_fu_241_p2.read());
}

void on_structure_edge::thread_tmp_260_fu_255_p2() {
    tmp_260_fu_255_p2 = (tmp_s_reg_353.read() | ap_const_lv34_4);
}

void on_structure_edge::thread_tmp_261_fu_260_p3() {
    tmp_261_fu_260_p3 = esl_concat<30,34>(ap_const_lv30_0, tmp_260_fu_255_p2.read());
}

void on_structure_edge::thread_tmp_262_fu_269_p2() {
    tmp_262_fu_269_p2 = (tmp_s_reg_353.read() | ap_const_lv34_6);
}

void on_structure_edge::thread_tmp_263_fu_274_p3() {
    tmp_263_fu_274_p3 = esl_concat<30,34>(ap_const_lv30_0, tmp_262_fu_269_p2.read());
}

void on_structure_edge::thread_tmp_264_fu_283_p2() {
    tmp_264_fu_283_p2 = (tmp_s_reg_353.read() | ap_const_lv34_7);
}

void on_structure_edge::thread_tmp_265_fu_288_p3() {
    tmp_265_fu_288_p3 = esl_concat<30,34>(ap_const_lv30_0, tmp_264_fu_283_p2.read());
}

void on_structure_edge::thread_tmp_266_fu_297_p2() {
    tmp_266_fu_297_p2 = (tmp_s_reg_353.read() | ap_const_lv34_5);
}

void on_structure_edge::thread_tmp_267_fu_302_p3() {
    tmp_267_fu_302_p3 = esl_concat<30,34>(ap_const_lv30_0, tmp_266_fu_297_p2.read());
}

void on_structure_edge::thread_tmp_fu_189_p2() {
    tmp_fu_189_p2 = (!i_cast_fu_185_p1.read().is_01() || !scenario_nr_struct.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_cast_fu_185_p1.read()) < sc_bigint<32>(scenario_nr_struct.read()));
}

void on_structure_edge::thread_tmp_s_fu_200_p3() {
    tmp_s_fu_200_p3 = esl_concat<31,3>(i_reg_120.read(), ap_const_lv3_0);
}

void on_structure_edge::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(tmp_fu_189_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_156_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((!esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_166_p2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_132_reg_409.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_133_reg_413.read()))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_171_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_137_fu_311_p2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_135_reg_420.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_136_reg_424.read()))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_156_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            if ((!esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_166_p2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_138_reg_431.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_139_reg_435.read()))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_141_reg_442.read()) || esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_320_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
            break;
    }
}

}

