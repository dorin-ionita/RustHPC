-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity in_structure is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (31 downto 0);
    y : IN STD_LOGIC_VECTOR (31 downto 0);
    scenario_nr_struct : IN STD_LOGIC_VECTOR (31 downto 0);
    scenario_structure_c_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    scenario_structure_c_ce0 : OUT STD_LOGIC;
    scenario_structure_c_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of in_structure is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv34_6 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000110";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv34_1 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    constant ap_const_lv34_3 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tmp_fu_110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_8_fu_115_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_8_reg_220 : STD_LOGIC_VECTOR (30 downto 0);
    signal scenario_structure_c_34_reg_230 : STD_LOGIC_VECTOR (6 downto 0);
    signal scenario_structure_c_35_reg_235 : STD_LOGIC_VECTOR (6 downto 0);
    signal scenario_structure_c_36_reg_240 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_160_fu_179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_160_reg_245 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_161_fu_184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_161_reg_249 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_162_fu_189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_162_reg_253 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal i_reg_79 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_163_fu_194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0_phi_fu_94_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0_reg_90 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_283_fu_129_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_285_fu_140_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_287_fu_155_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_289_fu_170_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_cast_fu_106_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_121_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_284_fu_134_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_286_fu_149_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_288_fu_164_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv1_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_state6) and ((tmp_reg_216 = ap_const_lv1_0) or (not((ap_const_lv1_0 = tmp_163_fu_194_p2)) and not((ap_const_lv1_0 = tmp_160_reg_245)) and not((ap_const_lv1_0 = tmp_161_reg_249)) and not((ap_const_lv1_0 = tmp_162_reg_253)))))) then 
                    ap_return_preg <= p_0_phi_fu_94_p4;
                end if; 
            end if;
        end if;
    end process;


    i_reg_79_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state6) and ((not((tmp_reg_216 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_160_reg_245)) or (not((tmp_reg_216 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_161_reg_249)) or (not((tmp_reg_216 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_162_reg_253)) or (not((tmp_reg_216 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_163_fu_194_p2))))) then 
                i_reg_79 <= i_8_reg_220;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_79 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    p_0_reg_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state6) and not((tmp_reg_216 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_163_fu_194_p2)) and not((ap_const_lv1_0 = tmp_160_reg_245)) and not((ap_const_lv1_0 = tmp_161_reg_249)) and not((ap_const_lv1_0 = tmp_162_reg_253)))) then 
                p_0_reg_90 <= ap_const_lv1_1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and (tmp_fu_110_p2 = ap_const_lv1_0))) then 
                p_0_reg_90 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2))) then
                i_8_reg_220 <= i_8_fu_115_p2;
                tmp_reg_216 <= tmp_fu_110_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((tmp_fu_110_p2 = ap_const_lv1_0)))) then
                    scenario_structure_c_34_reg_230(6 downto 3) <= tmp_285_fu_140_p3(7 - 1 downto 0)(6 downto 3);
                    scenario_structure_c_35_reg_235(6 downto 3) <= tmp_287_fu_155_p3(7 - 1 downto 0)(6 downto 3);
                    scenario_structure_c_36_reg_240(6 downto 3) <= tmp_289_fu_170_p3(7 - 1 downto 0)(6 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then
                tmp_160_reg_245 <= tmp_160_fu_179_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4))) then
                tmp_161_reg_249 <= tmp_161_fu_184_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state5))) then
                tmp_162_reg_253 <= tmp_162_fu_189_p2;
            end if;
        end if;
    end process;
    scenario_structure_c_34_reg_230(2 downto 0) <= "110";
    scenario_structure_c_35_reg_235(2 downto 0) <= "001";
    scenario_structure_c_36_reg_240(2 downto 0) <= "011";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, tmp_fu_110_p2, tmp_reg_216, tmp_160_fu_179_p2, tmp_160_reg_245, tmp_161_fu_184_p2, tmp_161_reg_249, tmp_162_reg_253, tmp_163_fu_194_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((tmp_fu_110_p2 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if ((ap_const_lv1_0 = tmp_160_fu_179_p2)) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if ((ap_const_lv1_0 = tmp_161_fu_184_p2)) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((tmp_reg_216 = ap_const_lv1_0) or (not((ap_const_lv1_0 = tmp_163_fu_194_p2)) and not((ap_const_lv1_0 = tmp_160_reg_245)) and not((ap_const_lv1_0 = tmp_161_reg_249)) and not((ap_const_lv1_0 = tmp_162_reg_253))))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5 downto 5);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_reg_216, tmp_160_reg_245, tmp_161_reg_249, tmp_162_reg_253, ap_CS_fsm_state6, tmp_163_fu_194_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1)) or ((ap_const_lv1_1 = ap_CS_fsm_state6) and ((tmp_reg_216 = ap_const_lv1_0) or (not((ap_const_lv1_0 = tmp_163_fu_194_p2)) and not((ap_const_lv1_0 = tmp_160_reg_245)) and not((ap_const_lv1_0 = tmp_161_reg_249)) and not((ap_const_lv1_0 = tmp_162_reg_253))))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(tmp_reg_216, tmp_160_reg_245, tmp_161_reg_249, tmp_162_reg_253, ap_CS_fsm_state6, tmp_163_fu_194_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state6) and ((tmp_reg_216 = ap_const_lv1_0) or (not((ap_const_lv1_0 = tmp_163_fu_194_p2)) and not((ap_const_lv1_0 = tmp_160_reg_245)) and not((ap_const_lv1_0 = tmp_161_reg_249)) and not((ap_const_lv1_0 = tmp_162_reg_253)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(tmp_reg_216, tmp_160_reg_245, tmp_161_reg_249, tmp_162_reg_253, ap_CS_fsm_state6, tmp_163_fu_194_p2, p_0_phi_fu_94_p4, ap_return_preg)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state6) and ((tmp_reg_216 = ap_const_lv1_0) or (not((ap_const_lv1_0 = tmp_163_fu_194_p2)) and not((ap_const_lv1_0 = tmp_160_reg_245)) and not((ap_const_lv1_0 = tmp_161_reg_249)) and not((ap_const_lv1_0 = tmp_162_reg_253)))))) then 
            ap_return <= p_0_phi_fu_94_p4;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    i_8_fu_115_p2 <= std_logic_vector(unsigned(i_reg_79) + unsigned(ap_const_lv31_1));
    i_cast_fu_106_p1 <= std_logic_vector(resize(unsigned(i_reg_79),32));

    p_0_phi_fu_94_p4_assign_proc : process(tmp_reg_216, tmp_160_reg_245, tmp_161_reg_249, tmp_162_reg_253, ap_CS_fsm_state6, tmp_163_fu_194_p2, p_0_reg_90)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state6) and not((tmp_reg_216 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_163_fu_194_p2)) and not((ap_const_lv1_0 = tmp_160_reg_245)) and not((ap_const_lv1_0 = tmp_161_reg_249)) and not((ap_const_lv1_0 = tmp_162_reg_253)))) then 
            p_0_phi_fu_94_p4 <= ap_const_lv1_1;
        else 
            p_0_phi_fu_94_p4 <= p_0_reg_90;
        end if; 
    end process;


    scenario_structure_c_address0_assign_proc : process(ap_CS_fsm_state2, scenario_structure_c_34_reg_230, scenario_structure_c_35_reg_235, scenario_structure_c_36_reg_240, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, tmp_283_fu_129_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state5))) then 
            scenario_structure_c_address0 <= scenario_structure_c_36_reg_240;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
            scenario_structure_c_address0 <= scenario_structure_c_35_reg_235;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            scenario_structure_c_address0 <= scenario_structure_c_34_reg_230;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            scenario_structure_c_address0 <= tmp_283_fu_129_p1(7 - 1 downto 0);
        else 
            scenario_structure_c_address0 <= "XXXXXXX";
        end if; 
    end process;


    scenario_structure_c_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state4)) or ((ap_const_lv1_1 = ap_CS_fsm_state5)))) then 
            scenario_structure_c_ce0 <= ap_const_logic_1;
        else 
            scenario_structure_c_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_160_fu_179_p2 <= "1" when (signed(scenario_structure_c_q0) < signed(x)) else "0";
    tmp_161_fu_184_p2 <= "1" when (signed(scenario_structure_c_q0) > signed(x)) else "0";
    tmp_162_fu_189_p2 <= "1" when (signed(scenario_structure_c_q0) < signed(y)) else "0";
    tmp_163_fu_194_p2 <= "1" when (signed(scenario_structure_c_q0) > signed(y)) else "0";
    tmp_283_fu_129_p1 <= std_logic_vector(resize(unsigned(tmp_s_fu_121_p3),64));
    tmp_284_fu_134_p2 <= (tmp_s_fu_121_p3 or ap_const_lv34_6);
    tmp_285_fu_140_p3 <= (ap_const_lv30_0 & tmp_284_fu_134_p2);
    tmp_286_fu_149_p2 <= (tmp_s_fu_121_p3 or ap_const_lv34_1);
    tmp_287_fu_155_p3 <= (ap_const_lv30_0 & tmp_286_fu_149_p2);
    tmp_288_fu_164_p2 <= (tmp_s_fu_121_p3 or ap_const_lv34_3);
    tmp_289_fu_170_p3 <= (ap_const_lv30_0 & tmp_288_fu_164_p2);
    tmp_fu_110_p2 <= "1" when (signed(i_cast_fu_106_p1) < signed(scenario_nr_struct)) else "0";
    tmp_s_fu_121_p3 <= (i_reg_79 & ap_const_lv3_0);
end behav;
